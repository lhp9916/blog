{"meta":{"title":"lhp's Corner","subtitle":null,"description":"Stay hungry, Stay foolish.","author":"刘海朋","url":"https://lhp9916.github.io"},"pages":[{"title":"关于","date":"2016-10-29T10:17:56.000Z","updated":"2021-03-30T08:05:24.895Z","comments":false,"path":"about.html","permalink":"https://lhp9916.github.io/about.html","excerpt":"","text":"刘海朋概况 出生年月：1993年5月 教育经历：长江大学计算机应用技术专业 — 大专 2012.09-2015.06 邮箱：lhp9916@gmail.com GitHub：https://github.com/lhp9916 技能清单以下均为我熟练使用的技能 开发语言：PHP/JavaScript Web框架：Laravel/ThinkPHP 前端框架：Vue.js/ElementUI/Bootstrap/jQuery/HTML5 Linux 系统：Ubuntu/CentOS 数据库相关：MySQL/MariaDB/Redis 版本管理、开发工具：Git/Docker/PhpStorm/Composer"},{"title":"categories","date":"2017-06-05T15:42:44.000Z","updated":"2021-03-30T08:05:24.895Z","comments":false,"path":"categories/index.html","permalink":"https://lhp9916.github.io/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"2020 春节","slug":"2020-spring-festival","date":"2020-01-25T08:51:38.000Z","updated":"2021-03-30T08:05:24.895Z","comments":true,"path":"2020-spring-festival/","link":"","permalink":"https://lhp9916.github.io/2020-spring-festival/","excerpt":"","text":"Hello，今天是 2020 年春节，新年快乐！ 新型冠状病毒肆虐，人心惶惶的，武汉封城了，县城、村里面的客运也全部停运，拜年的也辞掉了，大家都待在各自家中，等待着疫情过去…真算得上是有生之年系列！谢谢战斗在一线的医护人员，感谢有你们，我们在过年，你们在帮我们过关。 这场战斗我们一定会胜利，武汉加油！等春暖花开的时候，我们一起去武汉赏花。 2020年正月初一 于红安","categories":[],"tags":[]},{"title":"基于 OpenWrt 搭建 KMS 服务","slug":"openwrt-kms","date":"2019-10-11T02:38:57.000Z","updated":"2021-03-30T08:05:24.895Z","comments":true,"path":"openwrt-kms/","link":"","permalink":"https://lhp9916.github.io/openwrt-kms/","excerpt":"","text":"准备工作首先需要一台安装了 OpenWrt 系统的路由，然后在路由系统中安装 vlmcsd 插件，这是一个开源的 KMS服务器。我使用的是 KoolShare LEDE 固件，LEDE自带软件中心，安装插件很方便。 激活Windows 激活以管理员身份运行 cmd 或 powershell1234567891011# 卸载WINDOWS自带密钥slmgr /upk# 新密钥slmgr /ipk W269N-WFGWX-YVC9B-4J6C9-T83GX# 指定 Windows KMS服务器到你的路由器slmgr /skms 192.168.1.1# 激活slmgr /ato 注意事项 保证你的WINDOWS系统和OFFICE是VOL版的，这样才可以激活 WINDOWS系统除了旗舰版和家庭版都能激活（我使用WIN10 专业版） 激活期限为 180 天 常用Windows VL版KMS激活密钥列表：Win10专业版KMS： W269N-WFGWX-YVC9B-4J6C9-T83GXWin10企业版KMS： NPPR9-FWDCX-D2C8J-H872K-2YT43Win10LTSB版KMS： DCPHK-NFMTC-H88MJ-PFHPY-QJ4BJWin10家庭版KMS： TX9XD-98N7V-6WMQ6-BX7FG-H8Q99Win10教育版KMS： NW6C2-QMPVW-D7KKK-3GKT6-VCFB2Win7专业版KMS： FJ82H-XT6CR-J8D7P-XQJJ2-GPDD4Win7企业版KMS： 33PXH-7Y6KF-2VJC9-XBBR8-HVTHH OFFICE 激活找到你的OFFICE目录，我的是OFFICE 2016 32位版，目录为：C:\\Program Files (x86)\\Microsoft Office\\Office16进去这个目录，可以看见有个OSPP.VBS文件如果是OFFICE 2016 64位版，目录应为：C:\\Program Files\\Microsoft Office\\Office1612345cd “C:\\Program Files (x86)\\Microsoft Office\\Office16” # （双引号中对应你的实际目录）cscript ospp.vbs /sethst:192.168.1.1 #你的路由IPcscript ospp.vbs /act 注意事项OFFICE 2016在 MSDN 只有专业增强版，下载进来并安装，可以使用 office-C2R-to-VOL 这个工具能将 OFFICE 转为 VOL 版，然后再激活。 其他命令12345# 查询激活信息slmgr /dlv# 查看过期时间slmgr /xpr 使用系统自身批处理命令激活，因此会有后门，也不用担心病毒和信息窃取之类的。如果失败，请检查 Windows 和 OFFICE 具体版本信息。","categories":[],"tags":[]},{"title":"理性消费","slug":"rational-consumption","date":"2019-06-18T03:27:39.000Z","updated":"2021-03-30T08:05:24.895Z","comments":true,"path":"rational-consumption/","link":"","permalink":"https://lhp9916.github.io/rational-consumption/","excerpt":"","text":"昨晚四川宜宾又发生地震，希望一切安好，祈祷！ 今天是 6.18，大家有没有买买买啊，反正我是一件都没有买。最近在知乎上看到了一个问题——90后的你现在拥有多少存款？，有不少小伙伴都存了不少钱，当然也有些负债不少。今天就来聊聊理财。我身边有两个真实例子：A借钱买车，买车之后到处玩，朋友圈都是晒到各地游玩照片，不认真上班，还不上车贷就到处借亲戚朋友钱，借钱借不到就借信用卡、各种网贷，拆东墙补西墙；B是一位名牌大学生，家境不算好，凭借个人能力好不容易名校毕业，本以为一切都会好起来，可是B却不脚踏实地，希望通过炒股等金融手段一夜暴富，去年一年股市低迷，他却越陷越深，最后也是网贷缠身，和A的境遇类似。为何负债累累，主要是消费不理性，看到喜欢的就想买，加之花呗、借呗、信用卡，各种网贷门槛较低，网购都不像花的自己的钱，等月底看账单太多就分期还款…从此泥足深陷。 15年我大学毕业，到现在也快4年了，在武汉这二三线城市，工资不算高，也没有什么副业和其它收入，基本上也是月光族。买了不少吃灰的东西，手机、电脑还能用，但看到新品发布了，6.18、双11各种优惠打折，忍不住不下手，还感觉像赚到一样。现在这个社会消费主义至上，每个人都想过上精致的生活，这本来没有错，但是，请理性消费，量力而行。 如果做到理性消费呢？ 首先培养记账的习惯。我是从今年1月份开始记账的，记录下每一笔开销，到月底审核一下账单，学会每月审核账单能帮我们更有效的合理分配开支。如果不一笔笔记录下来，大脑就会“欺骗”自己，然后事情就过去了，我们的大脑就是这样。久了之后，你就会学会控制无效开销，学会把钱花在更有用的地方上了。 培养储蓄习惯。道理很简单，很多人存不下钱，不是因为赚的少，而是都被花完了。 关于理财，我现在用到的只有招商银行的朝朝盈和余额宝，股票、基金、期权不懂，还是别碰了，踏实点。 保险：社保 + 相互保，既可以帮助别人还能为自己多一份保障，当然如果有能力还是可以参加商业保险。 努力工作，理性消费，量力支出，多存钱，希望我们都能早日过上自己想要的生活。","categories":[],"tags":[]},{"title":"推荐一些“冷门”软件","slug":"software-recommend","date":"2019-01-08T12:13:24.000Z","updated":"2021-03-30T08:05:24.895Z","comments":true,"path":"software-recommend/","link":"","permalink":"https://lhp9916.github.io/software-recommend/","excerpt":"","text":"最近在知乎上看到一个话题 Windows 有哪些冷门但是非常值得推荐的软件，这些年用电脑也没少尝试不同的软件，积累了一些个人比较喜欢的分享给大家。 这里只推荐一些“冷门”的，像 Chrome 这样大家都知道的就不列了。 常用 Wox 快速启动 微PE工具箱 http://www.wepe.com.cn/ Snipaste 截图 https://zh.snipaste.com/ TreeSize Free 磁盘分析UWP AS SSD Benchmark 磁盘测速 CrystalDiskMark 磁盘性能UWP fliqlo 翻页钟 pdf-xchange viewer bandizip http://www.bandisoft.com/bandizip/ Honeyview 一款快速图像查看器 http://www.bandisoft.com/honeyview/ potplayer Dism++ https://www.chuyu.me/zh-Hans/ Etcher https://etcher.io/ iSlide PowerPoint的插件工具 https://www.islide.cc/ 傲梅分区助手 https://www.disktool.cn/index.html 傲梅轻松备份 typora http://www.typora.io/ TrafficMonitor https://github.com/zhongyang219/TrafficMonitor EV录屏 https://www.ieway.cn/evcapture.html Rufus http://rufus.akeo.ie/?locale=zh_CN Smart YouTube TV(Android盒子) https://smartyoutubetv.github.io/ PVE https://www.proxmox.com/en/downloads 光影魔术手 其他 Clover frp https://github.com/fatedier/frp/blob/master/README_zh.md 百度脑图 https://github.com/NaoTu/DesktopNaotu/releases WTG辅助工具 https://bbs.luobotou.org/thread-761-1-1.html Seer 预览 yomail 邮箱 Quicker https://getquicker.net/ PicGo 图床工具 Alt-Tab Terminator https://www.ntwind.com/software/alttabter.html AquaSnap https://www.nurgo-software.com/products/aquasnap","categories":[],"tags":[]},{"title":"2018 年终总结","slug":"my-2018","date":"2018-12-29T03:00:51.000Z","updated":"2021-03-30T08:05:24.895Z","comments":true,"path":"my-2018/","link":"","permalink":"https://lhp9916.github.io/my-2018/","excerpt":"","text":"2018 不平凡的一年 这一年大师们相继离开了这个世界（霍金、斯坦·李、保罗·艾伦、金庸……） 这一年灾难总是突如其来（台风、暴雨、坠机、爆炸、公交坠江……） 这一年“寒冬”席卷了整个互联网行业，巨头的股价持续下跌，裁员潮连很多技术大牛都无法幸免，锤子科技估计要凉了….. 就在最近，我身边也发了两起重大事故，武汉中南医院暴力袭医，公交车被限高栏削顶。2018 马上就要过去了，2019 我们该如何与这世界相处？ 2018，我的生活依然很平淡，每天都是在家和公司两点一线，周末、放假就和女朋友在武汉周围逛逛、看看电影，或在家刷刷剧，没去什么地方旅游，平平淡淡也是一种幸福。关于工作，我喜欢写代码，喜欢解决一个又一个的实际问题，有一种过五关斩六将的感觉，喜欢花时间去折腾。喜欢折腾成功后满满的成就感。虽然公司也受到“寒冬”的影响，目前还没有被裁，工作不是很多，还是踏实干着吧。毕竟大环境不太好，“寒冬”里更应该苦修内功。平常喜欢看 YouTube 和B站，主要看科技和摄影类的视频，买了软路由，折腾了PVE、LEDE、黑群辉，运行了半年很稳定，生命在于折腾嘛。明年打算买台相机耍耍，把摄影当成一个兴趣爱好也挺好的。关于读书，Kindle 果然没能逃脱成为泡面神器的命运，除了看完了《三体》全集、《未来简史》，还有正在看《人类简史》，基本上就没怎么看书了，可能是因为内心比较浮躁吧，这个病得治。 2019 我期待你的到来，继续折腾，继续向前走。 Stay hungry. Stay foolish.","categories":[{"name":"生活的足迹","slug":"生活的足迹","permalink":"https://lhp9916.github.io/categories/生活的足迹/"}],"tags":[]},{"title":"Fail2ban","slug":"fail2ban","date":"2018-12-24T02:06:33.000Z","updated":"2021-03-30T08:05:24.895Z","comments":true,"path":"fail2ban/","link":"","permalink":"https://lhp9916.github.io/fail2ban/","excerpt":"","text":"如果你经常查看服务器日志的话，会看到有来自不同地域 IP 不断的扫描 web 站点目录，还有尝试通过 shh 登录，这个世界坏人还是有的。最近在网上找到了一个防止暴力破解的服务——Fail2ban。Fail2ban 能够监控系统日志，匹配日志中的错误信息（使用正则表达式），执行相应的屏蔽动作（支持多种，一般为调用 iptables ），是一款很实用、强大的软件。 安装以下安装和配置都是在 Ubuntu 16.04 系统上进行的1apt install -y fail2ban 配置123456789101112cd /etc/fail2ban/jail.dvim nginx.conf[nginx]enabled = trueport = http,httpsfilter = nginx-filter#action = iptables[name=nginx, port=http, protocol=tcp]logpath = /var/log/nginx/access.logbantime = 3600findtime = 60maxretry = 10 123456cd /etc/fail2ban/filter.dvim nginx-filter.conf[Definition]failregex = &lt;HOST&gt; -.*- .*HTTP/1.* 404 .*$ignoreregex = 成效经过一个多月的使用，对于恶意攻击能起到屏蔽作用，对于 DDos 攻击应该也能起到防护作用。 123456789iptables -nLChain f2b-nginx (1 references)target prot opt source destination REJECT all -- 119.29.85.92 0.0.0.0/0 reject-with icmp-port-unreachableREJECT all -- 120.132.13.56 0.0.0.0/0 reject-with icmp-port-unreachableREJECT all -- 202.107.224.19 0.0.0.0/0 reject-with icmp-port-unreachableREJECT all -- 103.115.58.43 0.0.0.0/0 reject-with icmp-port-unreachableRETURN all -- 0.0.0.0/0 0.0.0.0/0 参考链接https://blog.csdn.net/dorisnzy/article/details/82926067","categories":[],"tags":[]},{"title":"Docker 安装","slug":"docker-install","date":"2018-06-09T03:32:15.000Z","updated":"2021-03-30T08:05:24.895Z","comments":true,"path":"docker-install/","link":"","permalink":"https://lhp9916.github.io/docker-install/","excerpt":"","text":"Docker 安装123456curl -sS https://get.docker.com/ | sh# 国内用这个curl -sSL https://get.daocloud.io/docker | shsudo usermod -aG docker your-user 安装 Docker Compose12curl -L https://get.daocloud.io/docker/compose/releases/download/1.21.2/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-composechmod +x /usr/local/bin/docker-compose","categories":[],"tags":[]},{"title":"2018，新启程","slug":"new-journey-2018","date":"2018-03-04T15:02:05.000Z","updated":"2021-03-30T08:05:24.895Z","comments":true,"path":"new-journey-2018/","link":"","permalink":"https://lhp9916.github.io/new-journey-2018/","excerpt":"","text":"2018 已经过去俩月了，但按我老家习俗算，正月十五元宵节过完才算年过月尽，然后出门打工的打工，在家干活也都忙碌起来了。最近这几年每次回家都像是一趟穿越之旅，短暂地回到无忧无虑的状态，活得无比真实和干净，空气中都充满了自由清爽的水分子。在外地的一切都像是做了好多个梦。 曾经的迷惘——选择什么样的技术方向、这个技术方向会不会淘汰、又出来的一门新技术/新框架要不要学习……经过这两年的沉淀和思考，很多问题已经有了答案。未来的方向很明确，怎么去做，怎么学习和提高也很清晰，此后要多花点时间积累和练习。 说回这个博客，我是不会放弃写作的，无论多久更新一篇，我都会坚持写下去的。关于写作，最近看《奇葩大会》冯唐讲的还挺有道理。他说，写作只有两个作用，一个是“度己”，一个是“度人”。也就是说你自己放松了，释怀了，开心了，可以洗洗睡了。别人看到了，如果觉得还挺有意思，有所收获，被触碰了，从某种程度上被度过去了，甚至只是度过一段无聊的时光，那也是我的荣幸。 2018 要做的事情有四件，第一是挣钱，实现财富自由是很困难的事，二十五岁也即将面临人生的大事，想想花钱的地方很多很多，总之从今往后挣钱将是人生第一要务，也是一个男人的担当。第二升级自己的“软件”，随着工作年限的增加，知识和技能的深度也要增加，不能只停留在用的阶段，有时间要了解其背后的原理和设计思想。第三件事阅读，好书还是非常多的，就算工作会占用掉大部分时间，还是可以利用上下班路上、马桶上、睡前失眠来阅读。第四件事，多出门走走，目标目前还没有，已经是春暖花开的季节，大好时光怎么能宅在家呢！ 还是那句话，修行是一辈子的事。 Stay hungry. Stay foolish.","categories":[],"tags":[]},{"title":"我的 2017","slug":"my-2017","date":"2017-12-29T13:10:10.000Z","updated":"2021-03-30T08:05:24.895Z","comments":true,"path":"my-2017/","link":"","permalink":"https://lhp9916.github.io/my-2017/","excerpt":"","text":"一年又一年，来，总结下，好习惯要坚持。 今天是 2017 年（阳历）最后一个工作日，下班的路上我就开始想这个总结要写什么内容，努力去回想这一年发生的事。 先说下去的地方吧。今年因出差去海南待了一周，海南岛是挺美的一个地方，但是由于其他原因做完事就回来，没有到三亚去看下，不过一个人也没什么好去的，以后一定要带未来老婆去浪一回。国庆节期间去昆明待了半个月，我姐嫁到昆明，国庆举行婚礼。这次和老爸老妈一起，我们一家四口首次一起跨出湖北，期间去了昆明”滇池“那个景点玩了一天，坐了缆车，走了索道，过了龙门，还拍了好多照片，这可是我们一家人第一次一起出去玩，挺不容易的。爸爸妈妈那代人一生肯吃苦耐劳、勤俭持家，老了就更不愿意出门了，以后有机会还是带他们出去走一走吧。其实到处走走，以后跟村里面的人闲聊也多一点谈资。今年还实现去年的一个目标，就是我终于回到大武汉了，终于结束了异地恋，很幸运我们都能坚持下来。当然，选择回来就意味着放弃了一些东西，这个世界就是这样，你只要知道什么更重要就行了。回来了离家也近点，以后要常回家看看。 大抵这一年来，是最爱看书的一年。2017 年已经过去了，对于即将到来2018年，我还是要叮嘱自己，要读很多书。自从买了 Kindle ，阅读习惯也有所改变，以前买的很多纸质书有的还没怎么翻过，也几乎不用手机看书了，现在一般就在亚马逊上买电子书看，便宜又方便，阅读体验杠杠的。关于读了那些书，我效仿阮一峰老师列了个书单，有兴趣的可以去看看。 另外，我用 Ubuntu 系统作为我的开发和日常使用操作系统，Linux 系统的高效，还有命令行下的开发体验简直太爽了。如果你也是一个 web 或 android 开发者，强烈你来试试 Linux 操作系统，个人感觉Android studio 编译速度快了很多。做活动买了京东的云主机，1核2G内存一年188。也在 Godday 上买了个域名——liuhaipeng.info，玩起了服务器运维。主要是想尝试自己来管理一台服务器，下一步想把域名备案完成，走一遍这个流程（听说很恶心），希望早日通过备案。目前可以通过 blog.liuhaipeng.info 来访问我的博客。 就把此文当做这一年的总结吧。 Stay hungry. Stay foolish.","categories":[{"name":"生活的足迹","slug":"生活的足迹","permalink":"https://lhp9916.github.io/categories/生活的足迹/"}],"tags":[]},{"title":"进入 Linux 的世界","slug":"ubuntu","date":"2017-12-16T11:51:05.000Z","updated":"2021-03-30T08:05:24.895Z","comments":true,"path":"ubuntu/","link":"","permalink":"https://lhp9916.github.io/ubuntu/","excerpt":"","text":"Hello Linux最近看了一本书——《只是为了好玩》，作者是林纳斯，也就是那位大名鼎鼎的 Linux 之父，这本书是他写的一本自传，如果你也是程序员，强烈建议你买了读读。书的内容主要讲的是 Linux 的诞生到发展壮大，还有“自由软件”、“开源”等问题的探讨，还包括林纳斯本人对生活的理解，十分有趣。 也许是受了林纳斯的“洗脑”，看书的同时我就把电脑装上了 Linux 。老实说，之前也曾不止一次地冲动把电脑装上 Ubuntu ,但是每次都没有坚持一个星期就换回的 Windows，好吧，我说实话，其实是三天。一直感觉Linux软件太匮乏，连QQ都没有。 这次是下定决心折腾了，忽然发现进入了一个全新的世界。下面是我折腾的成果。你知道还有更多～ Ubuntu 配置主题 Flatabuloushttps://github.com/anmoljagetia/Flatabulous 常用软件 神器 终端软件：Guake Markdown编辑器：Typora 启动器： Albert Mysql管理：DBeaver 还有常见的网易云音乐、搜狗输入法、Firefox、WPS、Chrome、VScode、Sublime Text。 如果你也热爱开源文化，欢迎来到 Linux 的世界，这里真正的自由、开放。如果没有意外的话，以后我将一直使用Ubuntu 作为我桌面操作系统，期待你的加入。","categories":[{"name":"技术分享","slug":"技术分享","permalink":"https://lhp9916.github.io/categories/技术分享/"}],"tags":[]},{"title":"使用 supervisor 管理进程","slug":"supervisor","date":"2017-08-20T03:31:32.000Z","updated":"2021-03-30T08:05:24.895Z","comments":true,"path":"supervisor/","link":"","permalink":"https://lhp9916.github.io/supervisor/","excerpt":"","text":"Supervisor 是一个用 Python 写的进程管理工具，可以很方便的用来启动、重启、关闭进程。比如当服务异常死掉时，Supervisor 可以帮我们自动重启。 安装1pip install supervisor 如果没有 pip ，请先安装，这里我使用的系统是 Ubuntu1apt-get install python-pip 配置1234//生成配置文件echo_supervisord_conf &gt; /etc/supervisord.conf//编辑vim /etc/supervisord.conf 把 /etc/supervisord.conf 里 include 部分的的配置修改如下12[include]files = /usr/supervisord.conf/*.ini 123mkdir /usr/supervisord.confcd /usr/supervisord.confvim redis.ini redis.ini 添加如下内容1234[program:redis]command=/usr/local/bin/redis-serverautostart=falseautorestart=true 启动 supervisord1supervisord -c /etc/supervisord.conf 使用 supervisorctlSupervisorctl 是 supervisord 的一个命令行客户端工具。1234supervisorctl statussupervisorctl start redis//查看进程ps aux | grep redis 如果 redis 服务异常退出，supervisor会重启它，由此可以保障服务的稳定性。 参考http://liyangliang.me/posts/2015/06/using-supervisor/","categories":[{"name":"笔记本","slug":"笔记本","permalink":"https://lhp9916.github.io/categories/笔记本/"}],"tags":[]},{"title":"2017年中总结","slug":"middle-2017-summary","date":"2017-06-14T13:35:33.000Z","updated":"2021-03-30T08:05:24.895Z","comments":true,"path":"middle-2017-summary/","link":"","permalink":"https://lhp9916.github.io/middle-2017-summary/","excerpt":"","text":"常来总结总结，没坏处 ~ 好久没来博客写点东西了，先说明一点，关于技术学习、分享的部分以后都放在学习笔记 notes 里面，以 gitbook 形式展现。那么以后博客能写啥内容呢？ 以后博客主要用来记录生活，表达观点想法，分享一些有趣有用的软硬件，以及读书心得体会…目前能想到的就是这些。 快速回顾2017年刚开始的时候，原本只打算把手头项目做完，就换个公司发展。结果没料到很多工期上的延误，很多事情我也无能为力，工作细节这里就不说了。假期也过得很平淡，清明、五一、端午包括周末，多半就宅在家里，睡觉、看书、写代码、看视频，于是上班、下班、放假，日子很快就过去了。 关于事业现在这家公司是做自动化方面，软件主要是做 PC 客户端程序，我去后也开发了手机端 App，工作主要是研发 App，也有二次开发 PC 程序。部门老大想让我也转向 C# 做桌面开发，在现在这个移动互联网时代，再去做这个明显是逆潮流，而且我也没兴趣。顺便提下，我如何进这公司，请参见《转向C#》。上学的时候学了比较长一段时间 Android，我有意向向这个方面发展，所以当初来公司开发 Android App确实对我很有吸引力。这一年市场反应不好，公司也不愿意投入。加上公司也不太重视技术，所以我觉得我待下去也是浪费时间，学不到什么东西。很期待下一份工作。 关于家庭再过几天我就24岁了，人生已经经历了两轮，女盆友总说我不成熟，看起来不像二十多岁参加工作的人。可能在家一直是最小那个，受到哥哥、姐姐照顾比较多，没有经历过所谓“血泪人生”吧。总是觉得人生应该多点苦难才真实。毕竟哪有那么便宜的事情。不历劫不接受点磨难，轻易得到的，总是感觉也会这样轻易地失去。一下站是武汉，尽快结束异地恋；武汉离老家近，以后放假也可回去看看，不用再一年回家一次，父母也慢慢老去…在未来几年，也希望我们的爱情能够开花结果，组建家庭，嗯，还有很长的路要走，我要变得强大起来。 关于健康 &amp; 体魄体育一直是我的弱项，也比较懒。最近读完了李开复老师《向死而生》，写的是开复老师与癌症斗争中，体会到很多人生平时无法看到和体会到的哲理，健康、生命、家人，这些我们熟悉而经常会忽略的东西。一直想拥有强壮的体魄，好在无论遇到什么环境，我都能生存和适应。要选择一项运动的话，我选择爬山，去游山玩水，写点游记啥的。 关于读书大抵这一年来，是最爱看书的一年。也是这一年，才体验到从书上获取知识的快感。慢慢地你会发现，「多读书多看报少吃零食多睡觉」真的是真理来的。2017 年已经过去一半了，我还是要叮嘱自己，要读很多书。阅读习惯也有所改变，以前买的纸质书有的还没怎么翻过，现在多半就在京东阅读上买电子书看，比较方便，电子书也便宜一些。2017上半年读完的书： 吴军 《浪潮之巅》第三版上下册 李开复《向死而生》《人工智能》 2017下半年要读完的书： 吴军 《智能时代》 李开复 《世界因你不同》 《未来简史》 《史蒂夫·乔布斯传》 先到这吧~","categories":[{"name":"生活的足迹","slug":"生活的足迹","permalink":"https://lhp9916.github.io/categories/生活的足迹/"}],"tags":[]},{"title":"Visual Studio Code 上手","slug":"vsc","date":"2017-04-22T03:26:43.000Z","updated":"2021-03-30T08:05:24.895Z","comments":true,"path":"vsc/","link":"","permalink":"https://lhp9916.github.io/vsc/","excerpt":"","text":"之前从 Sublime 切换 Atom ，使用过程中遇到很多问题，比如 Atom 打开一个大文件慢的要命、安装插件时经常失败（墙的原因），让我不可忍受，又换回了 Sublime 。 VSCode 刚出来的时候并不是特别看好，没想到短短一年多的时间，发展如此快，很多大神推荐，同样底层用着 Electron，VSC 的水平要高 Atom 好几个档次，毕竟微软的大腿还是很粗的。 Setting sync Gist对于开发者，一般几台电脑，不可能每次换电脑都让我重新配置一次，可经不起这个折腾。 VSC 的 Settings Sync 插件可以轻松将 IDE 的所有配置一键备份到 github 上，也可以将 github 上的配置一键拉取下来，然后重启 IDE 便可以共享同样的配置了。下面我来介绍下它的用法 在左侧的 sidebar 选中最后一个，搜索 Sync，安装 Settings Sync； 安装后，摁下 Ctrl + Shift + P 打开控制面板，搜索 Sync，选择 update/upload 可以上传你的配置，选择 Download 会下载远程配置； 如果你之前没有使用过 Sync，在上传配置的时候，会让你在 Github 上创建一个 Personal access tokens，允许 IDE 在你的 gist 中创建资源；下载远程配置，你可以直接将 gist 的 id 填入； 下载后等待安装，然后重启即可 小结“磨刀不误砍柴工”，花费点时间在工具的研究上，可以提升我们的开发和写作效率，提倡大家在这方面进行长时间的折腾。 VSC 估计一两年不会再更换了，期待下一个“神器”。 参考链接 如何快速上手一款 IDE - VSC 配置指南和插件推荐","categories":[{"name":"技术分享","slug":"技术分享","permalink":"https://lhp9916.github.io/categories/技术分享/"}],"tags":[]},{"title":"安装系统","slug":"install-os","date":"2017-03-17T13:48:26.000Z","updated":"2021-03-30T08:05:24.895Z","comments":true,"path":"install-os/","link":"","permalink":"https://lhp9916.github.io/install-os/","excerpt":"","text":"每个程序员都是不折腾不舒服斯基，我也不例外，今天就来聊聊装系统。刚接触电脑的时候认为装系统是一件很难的事，有几次尝试者重装系统，结果弄得电脑开不了机，只好去电脑店，装一次就得花三十块钱，这样的事情加起来应该有三次了。但是，程序员的有一项美好品质 —— 坚持探索和尝试。后来，就学会了装系统。 下载系统镜像在这里我强力推荐 MSDN，我告诉你 ，在这里你可以下载纯净版的系统。当然，国内也有一些 GHOST 系统，如深度技术、雨林木风等，大家可以去 系统之家官网 下载。 三种安装方式装系统一般有三种方式：光盘安装、硬盘安装、U盘安装。从字面上就可以看出，前面代表的的开机时系统是从哪里启动的。 现在绝大多数电脑已经取消了光驱，系统光盘也比较少见了，所以此方式不推荐。硬盘安装也许是最简单的安装方式，下载好系统 ISO 镜像，解压后点击 setup.exe 进行安装。但是很多时候正是因为系统出现问题无法启动才需要重装，这种情况下硬盘安装就不适用了，而且硬盘安装方式会曾在大量的旧系统残留，也不是很推荐。 最万能的方式就是U盘安装。U盘安装也有两种方式，一种是下载好 MSDN 镜像文件，然后用 软碟通 (这是一款收费软件，但是可以免费试用)打开，写入硬盘镜像到U盘，然后从U盘启动进行安装。缺点是，系统安装完成后激活、打补丁、装驱动需要花很长时间，但这是我最推荐的方式，这种方式适用于安装 Linux 系统(亲测)。还有另外一种方式，就是安装PE系统到U盘，然后从U盘启动PE系统，还原 GHOST 系统，这种方式简单高效。这里给大家强力推荐 微PE工具箱，这是我用过最好最纯净的PE系统，没有任何捆绑，如果想支持一下作者，可以去购买作者制作好的启动U盘。PE系统最大的好处就是系统无法启动时，可以通过PE系统完全访问磁盘，拷贝重要文件。 好了，其实我并没有说具体安装系统的步骤，因为我觉得网上的教程、资料已经很多了，只要你肯学就一定能学会。如果有疑问，欢迎给我来信 lhp9916@gmail.com，我的微博上也会经常分享一些非常好用的良心软件，欢迎关注。","categories":[{"name":"技术分享","slug":"技术分享","permalink":"https://lhp9916.github.io/categories/技术分享/"}],"tags":[]},{"title":"redis 安装","slug":"install-redis","date":"2017-03-09T14:05:31.000Z","updated":"2021-03-30T08:05:24.895Z","comments":true,"path":"install-redis/","link":"","permalink":"https://lhp9916.github.io/install-redis/","excerpt":"","text":"开始之前系统环境：CentOS release 6.8 (Final)安装 gcc 和 tcl 依赖：1yum install -y gcc tcl 编译安装1234567wget http://download.redis.io/releases/redis-3.2.8.tar.gztar -xf redis redis-3.2.8.tar.gzmakemake install redis 安装到 /usr/local/bin 目录下。 配置拷贝配置文件：1cp redis.conf /root/config/ 修改配置文件1vim /root/config/redis.conf 将 daemonize 改为 yes ，即后台启动 redis 服务器 启动 redis 服务器1redis-server /root/config/redis.conf 登录redis1redis-cli","categories":[{"name":"笔记本","slug":"笔记本","permalink":"https://lhp9916.github.io/categories/笔记本/"}],"tags":[]},{"title":"切换国内“源”","slug":"change-source-to-china","date":"2017-03-08T14:03:27.000Z","updated":"2021-03-30T08:05:24.895Z","comments":true,"path":"change-source-to-china/","link":"","permalink":"https://lhp9916.github.io/change-source-to-china/","excerpt":"","text":"切换 Node 源由于 Node 的官方模块仓库网速太慢，模块仓库需要切换到阿里的源。1npm config set registry https://registry.npm.taobao.org/ 执行下面的命令，确认是否切换成功。1npm config get registry 切换 Composer 源设置中国的镜像：1composer config -g repo.packagist composer https://packagist.phpcomposer.com 通过 Composer 安装 Laravel 安装器：1composer global require &quot;laravel/installer&quot; 确保 $HOME/.composer/vendor/bin 在系统路径中，否则不能在任意路径调用 laravel 命令。 安装完成后，通过简单的 laravel new 命令即可在当前目录下创建一个新的 Laravel 应用，例如，laravel new blog 将会创建一个名为 blog 的新应用，且包含所有 Laravel 依赖。该安装方法比通过 Composer 安装要快很多：1laravel new blog","categories":[{"name":"笔记本","slug":"笔记本","permalink":"https://lhp9916.github.io/categories/笔记本/"}],"tags":[]},{"title":"MySQL 主从同步","slug":"mysql-master-slave","date":"2017-03-04T15:50:56.000Z","updated":"2021-03-30T08:05:24.895Z","comments":true,"path":"mysql-master-slave/","link":"","permalink":"https://lhp9916.github.io/mysql-master-slave/","excerpt":"","text":"MySQL 主从同步的机制MySQL 主从同步是在MySQL主从复制(Master-Slave Replication)基础上实现的，通过设置在Master MySQL上的binlog(使其处于打开状态)，Slave MySQL上通过一个I/O线程从Master MySQL上读取binlog，然后传输到Slave MySQL的中继日志中，然后Slave MySQL的SQL线程从中继日志中读取中继日志，然后应用到Slave MySQL的数据库中。这样实现了主从数据同步功能。 MySQL主从同步的作用 可以作为一种备份机制，相当于热备份 可以用来做读写分离，均衡数据库负载 环境描述OS：CentOS主服务器master：192.168.3.222从服务器slave：192.168.3.223 mysql主服务器配置(master)master服务器配置:1vim /etc/my.cnf 12345[mysqld]server-id=1log-bin=mysql-bin # 启用二进制日志binlog-do-db=test_tongbu #指定数据库，如果不指定就是全部数据库#binlog-ignore-db = mysql,information_schema #忽略写入binlog的库 重启服务器：1service mysqld restart 在主服务器上建立帐户并授权slave_account： 1234#创建slave_account帐号，密码123456mysql&gt; grant replication slave on *.* to &apos;slave_account&apos;@&apos;%&apos; identified by &apos;123456&apos;;#更新数据库权限mysql&gt;flush privileges; 查询master的状态：1mysql&gt; show master status; 注：执行完这个步骤后不要再操作主数据库了，防止主数据库状态值变化。 mysql从服务器配置(slave)修改MySQL配置：1server-id =2 执行同步命令，设置主数据库ip，同步帐号密码，同步位置1mysql&gt;change master to master_host=&apos;192.168.3.222&apos;,master_user=&apos;slave_account&apos;,master_password=&apos;123456&apos;,master_log_file=&apos;mysql-bin.000014&apos;,master_log_pos=327; 开启同步功能1mysql&gt;start slave; 检查从数据库状态：1mysql&gt; SHOW SLAVE STATUS\\G; 注：Slave_IO_Running及Slave_SQL_Running进程必须正常运行，即YES状态，否则说明同步失败。 停止同步：1mysql&gt;stop slave 到这里，主从数据库设置工作已经完成，自己可以新建数据库和表，插入和修改数据，测试一下是否成功。","categories":[{"name":"技术分享","slug":"技术分享","permalink":"https://lhp9916.github.io/categories/技术分享/"}],"tags":[]},{"title":"Laravel-ide-helper 高效的 IDE 智能提示插件","slug":"laravel-ide-helper","date":"2017-03-03T13:00:32.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"laravel-ide-helper/","link":"","permalink":"https://lhp9916.github.io/laravel-ide-helper/","excerpt":"","text":"barryvdh/laravel-ide-helper 扩展包能让你的 IDE ( PHPStorm, Sublime ) 实现自动完成、代码智能提示和代码跟踪等功能，大大提高你的开发效率。 安装1). 使用 Composer 安装该扩展包：1composer require barryvdh/laravel-ide-helper 2). 安装完成后，在 config/app.php 添加以下内容到 providers 数组。1Barryvdh\\LaravelIdeHelper\\IdeHelperServiceProvider::class, 3). 接下来运行以下命令生成代码对应文档：1php artisan ide-helper:generate 由于使用此扩展包会生成相应的代码结构文件, 这些文件可能只有当前的开发者的 IDE 需要, 因此需要添加对应配置到 .gitignore 文件中：1234.idea_ide_helper.php_ide_helper_models.php.phpstorm.meta.php 为了后续方便，你也可以在composer.json文件中作如下配置：12345678\"scripts\":&#123; \"post-update-cmd\": [ \"Illuminate\\\\Foundation\\\\ComposerScripts::postUpdate\", \"php artisan ide-helper:generate\", \"php artisan ide-helper:meta\", \"php artisan optimize\" ]&#125;,","categories":[{"name":"技术分享","slug":"技术分享","permalink":"https://lhp9916.github.io/categories/技术分享/"}],"tags":[]},{"title":"jlog  Android日志","slug":"jlog-android","date":"2017-03-02T09:23:24.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"jlog-android/","link":"","permalink":"https://lhp9916.github.io/jlog-android/","excerpt":"","text":"最近需要在项目中加入将日志存储到文件的功能，本着“不要重复造轮子的原则”，施展 “Google+GitHub” 大法，找到了这个项目 —— jlog。 添加依赖在根目录的build.gradle里添加仓库。12345allprojects &#123; repositories &#123; jcenter() maven &#123; url &quot;https://jitpack.io&quot; &#125; &#125; 在模块的build.gradle中添加依赖。123dependencies &#123; compile &apos;com.github.JiongBull:jlog:0.1.0&apos;&#125; 初始化建议在你的 application 的 onCreate() 方法里初始化 jlog 的全局配置，设置一次终身受用。 12345678910111213141516171819202122232425262728public class RootApp extends Application &#123; private static Logger sLogger; @Override public void onCreate() &#123; super.onCreate(); List&lt;String&gt; logLevels = new ArrayList&lt;&gt;(); logLevels.add(LogLevel.ERROR); logLevels.add(LogLevel.WTF); sLogger = Logger.Builder.newBuilder(getApplicationContext(), \"jlog\") .setDebug(true) //是否开启调试模式 .setWriteToFile(true) //是否输出日志到文件 .setLogDir(getString(R.string.app_name)) .setLogPrefix(\"\") .setLogSegment(LogSegment.TWELVE_HOURS) .setLogLevelsForFile(logLevels) .setZoneOffset(TimeUtils.ZoneOffset.P0800) .setTimeFormat(\"yyyy-MM-dd HH:mm:ss\") .setPackagedLevel(1) .setStorage(null) .build(); &#125; public static Logger getsLogger() &#123; return sLogger; &#125;&#125; 注意事项要写文件到sd卡中，在 AndroidManifest 添加权限1&lt;uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" /&gt; 还有，如果是把 Logger 的初始化写到 application 中，一定不要忘记在 application标签中添加 name 属性。123456789101112131415&lt;application android:name=\".RootApp\" android:allowBackup=\"true\" android:icon=\"@mipmap/ic_launcher\" android:label=\"@string/app_name\" android:supportsRtl=\"true\" android:theme=\"@style/AppTheme\"&gt; &lt;activity android:name=\".MainActivity\"&gt; &lt;intent-filter&gt; &lt;action android:name=\"android.intent.action.MAIN\" /&gt; &lt;category android:name=\"android.intent.category.LAUNCHER\" /&gt; &lt;/intent-filter&gt; &lt;/activity&gt; &lt;/application&gt; 使用使用非常简单，如下12RootApp.getsLogger().e(\"log\",\"hello logeer\");RootApp.getsLogger().d(\"log\",\"hello logger\"); 这样，在 logcat 和内部 sd 卡中，都可以看到输出的日志更多详细的配置请参见 GitHub 上的文档。","categories":[{"name":"技术分享","slug":"技术分享","permalink":"https://lhp9916.github.io/categories/技术分享/"}],"tags":[]},{"title":"CentOS 安装 Python3 笔记","slug":"install-python3-centos","date":"2017-02-28T13:07:10.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"install-python3-centos/","link":"","permalink":"https://lhp9916.github.io/install-python3-centos/","excerpt":"","text":"最近有时间就学习了 python ，写一下笔记。 windows 下安装Python比较简单，这里我推荐一个 Python 的发行版—— Anaconda，这个发行版默认带了很多包。下面讲下怎样在 CentOS 上安装 python3。一般安装好 CentOS 后都会自带 python ，这个版本是2.x，我们要安装 Python3。 安装安装基础依赖包1yum install -y ncurses-devel openssl openssl-devel zlib-devel gcc make glibc-devel libffi-devel glibc-static glibc-utils sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-deve 下载源码1wget https://www.python.org/ftp/python/3.6.0/Python-3.6.0.tgz 由于国外下载比较慢，推荐使用国内源来进行下载，这里使用sohu的源1wget http://mirrors.sohu.com/python/3.6.0/Python-3.6.0.tgz 解压1tar xvf Python-3.6.0.tgz 编译安装1234cd Python-3.6.0./configure --prefix=/usr/local/python3make allmake install 等待安装完成： 使用添加软链接12ln -s /usr/local/python3/bin/python3.6 /usr/local/bin/python3ln -s /usr/local/python3/bin/pip3.6 /usr/local/bin/pip3 使用 python3 命令如上图所示，出现类似的内容，证明python安装成功。 pip 使用pip 是Python的包管理工具，类似npm、composer。","categories":[{"name":"笔记本","slug":"笔记本","permalink":"https://lhp9916.github.io/categories/笔记本/"}],"tags":[]},{"title":"2017 春节","slug":"think-in-2017-spring-festival","date":"2017-02-06T02:58:03.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"think-in-2017-spring-festival/","link":"","permalink":"https://lhp9916.github.io/think-in-2017-spring-festival/","excerpt":"","text":"冬去春来，又是一年。2017是鸡年，是我的本命年。在中国人的眼里，“过年”与“回家”这两个词往往会一起出现。腊月二十七，我们凌晨四点出发，从广东开车回湖北，原本已经做好了堵车的准备，但路上却是一路畅通，经过十几个小时，晚上八点就到了家。家乡是一个小村子，二十几户一百来号人。 我相信，春节期间，几家欢喜几家愁，我觉得很有必要写篇文章，从我的角度来看“过年”。 今年回家，村子里面二十多家已经买车的有十几家，有人说这是农村人民生活好了，其实大家都是比着过日子，生怕自己家过得不如别人，当觉得比别人家过得好心里会有一种莫名的优越感。 现在农村过年其实是亲朋好友、邻里之间炫富的比拼，都在互相攀比谁在外面挣得多，混得好。我相信，这几天的经历，很多人应该能感受到。有没有被你的亲戚、邻里问过工资？他们问你的工资的目的是什么知道么？他们其实就是想听你说完你的工资，紧接着就会说，我儿子在哪哪工作，工资多高多高。对，这就是问你工资的目的，就是想换来一种高贵感。当然，我不是说所有人都是这样。他们巴不得你父母的儿子混得不如他的儿子，他们巴不得你家过得不好，这样他们才会有心理安慰，有满足感。而期望你过得不好的，很多时候，很可能就是你家的亲戚。 这点我是亲自经历过的。以前，各种人来挖苦我父母，说上大学有什么用，尤其还不是什么好大学，还不是一个月拿着几千块的工资，而他们的儿子，很多初中都没上完就挣所谓的大钱了。 当然，我不是说农村人不好，我只是说，如今农村的风气再也不如以前淳朴，钱在现今的社会，真的很重要。而我们的父母，恰恰是深刻认识到社会的现实，清楚的知道生活的不易，尽一切可能，把握住多挣一点钱的机会，即使在我们看来，多挣这点钱，可能真的很微不足道。我反而认为，我们的父母是最值得尊敬的，父母给了我们生命，我们根本没有资格讨厌他们，请试着去理解。 也许你觉得你现在工作了，可以挣钱了，但是你有没有想过，你现在过得还不错的生活，都是你父母辛苦挣钱换来的。我们没有经历过没钱的日子，我想我们的父辈一定经历过没钱的日子有多么困苦，也许你可能没想过房子车子的问题，但是你的父母肯定会为你提前考虑，结婚生子，房子车子，哪怕他们办不到，但是依然选择尽最大的努力，为子女的未来拼搏。为了对得起父母，最好的方式就是让自己更强大，只有自己有钱了，有能力了，你的父母才会更受尊敬。 君子爱财，取之有道。赚钱很重要，但是一定要走合法渠道，靠自己的能力，不走邪魔外道，这样挣的钱才是最光荣的。记住，你因挣钱而伟大了！","categories":[{"name":"生活的足迹","slug":"生活的足迹","permalink":"https://lhp9916.github.io/categories/生活的足迹/"}],"tags":[]},{"title":"PHP 标准规范","slug":"psr","date":"2017-01-23T03:51:21.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"psr/","link":"","permalink":"https://lhp9916.github.io/psr/","excerpt":"","text":"PSR 是 PHP Standard Recommendations 的简写，由 PHP FIG 组织制定的 PHP 规范，是 PHP 开发的实践标准。 PHP FIG，FIG 是 Framework Interoperability Group（框架可互用性小组）的缩写，由几位开源框架的开发者成立于 2009 年，从那开始也选取了很多其他成员进来（包括但不限于 Laravel, Joomla, Drupal, Composer, Phalcon, Slim, Symfony, Zend Framework 等），虽然不是「官方」组织，但也代表了大部分的 PHP 社区。项目的目的在于：通过框架作者或者框架的代表之间讨论，以最低程度的限制，制定一个协作标准，各个框架遵循统一的编码规范，避免各家自行发展的风格阻碍了 PHP 的发展，解决这个程序设计师由来已久的困扰。 目前已表决通过了 6 套标准，已经得到大部分 PHP 框架的支持和认可。 PSR 1 基本代码规范 PHP代码文件必须以 &lt;?php 或 &lt;?= 标签开始； PHP代码文件必须以 不带BOM的 UTF-8 编码； PHP代码中应该只定义类、函数、常量等声明，或其他会产生 从属效应 的操作（如：生成文件输出以及修改.ini配置文件等），二者只能选其一； 命名空间以及类必须符合 PSR 的自动加载规范：PSR-4； 类的命名必须遵循 StudlyCaps 大写开头的驼峰命名规范； 类中的常量所有字母都必须大写，单词间用下划线分隔； 方法名称必须符合 camelCase 式的小写开头驼峰命名规范。 PSR 2 代码风格规范 代码必须遵循 PSR-1 中的编码规范 。 代码必须使用4个空格符而不是 tab键 进行缩进。 每行的字符数应该软性保持在80个之内， 理论上一定不可多于120个， 但一定不能有硬性限制。 每个 namespace 命名空间声明语句和 use 声明语句块后面，必须插入一个空白行。 类的开始花括号({)必须写在其声明后自成一行，结束花括号(})也必须写在其主体后自成一行。 方法的开始花括号({)必须写在函数声明后自成一行，结束花括号(})也必须写在函数主体后自成一行。 类的属性和方法必须添加访问修饰符（private、protected 以及 public）， abstract 以及 final 必须声明在访问修饰符之前，而 static 必须声明在访问修饰符之后。 控制结构的关键字后必须要有一个空格符，而调用方法或函数时则一定不能有。 控制结构的开始花括号({)必须写在声明的同一行，而结束花括号(})必须写在主体后自成一行。 控制结构的开始左括号后和结束右括号前，都一定不能有空格符。 PSR 3 日志接口规范 LoggerInterface 接口对外定义了八个方法，分别用来记录 RFC 5424 中定义的八个等级的日志：debug、 info、 notice、 warning、 error、 critical、 alert 以及 emergency 。 第九个方法 —— log，其第一个参数为记录的等级。可使用一个预先定义的等级常量作为参数来调用此方法，必须与直接调用以上八个方法具有相同的效果。如果传入的等级常量参数没有预先定义，则必须抛出 Psr\\Log\\InvalidArgumentException 类型的异常。在不确定的情况下，使用者不该使用未支持的等级常量来调用此方法。 PSR 4 自动加载规范 此处的“类”泛指所有的class类、接口、traits可复用代码块以及其它类似结构。 一个完整的类名需具有以下结构: \\&lt;命名空间&gt;(\\&lt;子命名空间&gt;)* \\&lt;类名&gt; 完整的类名必须要有一个顶级命名空间，被称为 “vendor namespace”； 完整的类名可以有一个或多个子命名空间； 完整的类名必须有一个最终的类名； 完整的类名中任意一部分中的下划线都是没有特殊含义的； 完整的类名可以由任意大小写字母组成； 所有类名都必须是大小写敏感的。 当根据完整的类名载入相应的文件…… 完整的类名中，去掉最前面的命名空间分隔符，前面连续的一个或多个命名空间和子命名空间，作为“命名空间前缀”，其必须与至少一个“文件基目录”相对应； 紧接命名空间前缀后的子命名空间必须与相应的”文件基目录“相匹配，其中的命名空间分隔符将作为目录分隔符。 末尾的类名必须与对应的以 .php 为后缀的文件同名。 自动加载器（autoloader）的实现一定不能抛出异常、一定不能触发任一级别的错误信息以及不应该有返回值。 PSR 6 缓存接口规范缓存有如下几种方法，除了APC和OPcache是扩展，其他的都应该实现统一的缓存接口，如设置缓存、获取缓存、设置过期时间等。 Database File Memcache Redis Array APC OPcache PSR 7 HTTP 消息接口规范HTTP消息是Web开发的基础。Web浏览器和HTTP客户端之间，例如使用cURL创建一个发送到Web服务器的HTTP请求，Web服务器会返回一个HTTP响应。服务器端代码收到一个HTTP请求消息，并返回一个HTTP响应消息。 HTTP消息通常对与最终的消费者用户来说是抽象的，但作为开发者，我们通常需要知道它们是如何构建以及如何访问和操纵它们，以执行我们的任务，是否可能被创建为到HTTP API的请求或处理传入请求。 每一个HTTP请求消息有一个具体形式： POST /path HTTP/1.1Host: example.comfoo=bar&amp;baz=bat 一个请求的第一行是“请求行”，按照顺序包含了HTTP请求方法，请求的目标地址（通常是一个绝对URI或者服务器上的路径）以及HTTP协议的版本。接着是一个或多个HTTP头，一个空行，以及消息主体。 HTTP响应信息具有类似的结构： HTTP/1.1 200 OKContent-Type: text/plain 第一行是“状态行”，按照顺序，依次包含了HTTP协议的版本，HTTP状态码，以及一个“原因分析”，也就是一个对人类友好可读的状态码的描述。像请求消息一样，随后一个或多个HTTP头，一个空行，以及消息主体。 更多详细文档请参考 PHP编码规范。","categories":[{"name":"技术分享","slug":"技术分享","permalink":"https://lhp9916.github.io/categories/技术分享/"}],"tags":[]},{"title":"我的 2016 年","slug":"my-2016","date":"2016-12-24T15:02:27.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"my-2016/","link":"","permalink":"https://lhp9916.github.io/my-2016/","excerpt":"","text":"时光匆匆，又过去了一年。希望从今年起，把每年的这个时候都来总结一下，回顾过去的一年的得失与成长收获，展望新的一年，姑且把这当做一个习惯吧，也许多年后这些会成为自己宝贵的人生旅程。 技术和工作今年换了一次工作，上一家公司由于经营情况不好，被集团中的另一家公司合并，团队成员大部分都跳槽去了别的公司，我离职的时候，团队成员只剩下3个。当时据传公司会裁掉我们技术部门，果然就在我离职后一个星期左右，团队就解散了。人生中的第一份工作就这样结束，再一次让我感受到社会的残酷和人生的不确定性。 我是3月底的时候辞职，经朋友介绍，4月初来到东莞一家智能物流装备（主要做自动化设备、仓库管理系统）的公司上班。仓库管理系统(WMS)采用的是B/S架构，C# 开发。后面5月份的时候，我就开始全职研发基于仓库管理系统桌面版的 Android APP 。功能上和桌面版 WMS 类似，并可以取代原来的 WIN CE 的手持终端，并且在操作性、美观性大幅度提升，且降低了硬件成本。已在公司的仓库环境下使用，明年年初将会在项目上使用。在“工业4.0”、“互联网+”大环境下，Android APP 带那么一点“物联网”的影子，在公司日后的宣传上将成为一大亮点。 老实说，今年一年技术并没有太大的提升，从 PHP 转向 C#，然后又用 Java 开发 Android APP ，中间的经历真是一波三折。这一年我也爱上了Google，爱上了Open Source。于今我俨然成为了一名G粉(A Googler and Github fans)。 个人大多数程序员都是技术宅吧，我也不例外，平时喜欢宅在家里，16年去的地方不多，一次是清明节自驾游去了一趟惠州，一次是五一的时候去清远漂流，还有一次是驾校长训去了一趟珠海，玩得还不错。(^__^) 今年主要成就有两个。一个是坚持写博客已经一年了，到这一篇已经写了30篇，明年会继续发力，坚持把这个博客写下去，一直保持着写博客的习惯。另一个是利用工作之余，包括一些请假，终于拿到驾照了，算是完成一件“大事”。 今年在网上也“结识”了很多人，有阮一峰老师、stormzhang、安正超、Jelly Bool，帮助了我很多，真的很感激，也感激那些在网上写博客、回答问题、做技术分享的人，因为有你们，这个世界美好了许多。 今年看了很多两个姓罗的胖子的演讲，老罗的“一个理想主义者创业的故事”，罗胖的“罗辑思维”。 今年看了一些书，老罗《我的奋斗》、《生命不息，折腾不止》，阮一峰老师博客系列《如何变得有思想》。当然，我们都没有那么多时间读书，读书是一件很苦的事情，所以身边少不了罗胖这样的读书人。 展望2017回首2016 ，那么2017年自己也会有新的目标与新的期待。 个人技术积累。靠技术吃饭的毫无以为技术是核心竞争力，这部分会一直持续积累与提升，技术提升上真没有什么捷径，全靠一步一个脚印，我个人提升技术的几个主要手段：坚持看书，逛GitHub，阅读优秀源码，遇到问题主动google搜索，关心最新的技术，使自己跟上时代的步伐。 多做一些技术分享。看看今年一年的文章，技术分享并不多，可能根本原因还是积累不够吧。明年我会持续学习和加大分享。进行技术分享对自己有几个好处：一是自己的知识巩固，一直认为如果自己写的博客别人都看不懂，那说明自己本身也掌握的不够精通；二是名气的提升，增加包括自己和公司的行业知名度；三是自己在学习的时候很痛苦，网上的资料也大多互相copy，真正有价值的信息比较少，为此自己的原创博客希望能真正的帮助那些开发者，解决他们的实际问题，自己很有成就感。 最后，参加工作后，跟她异地已经一年半了，中间就过年的时候见了几次，希望明年结束异地，能在同一个城市生活，希望这段感情能够早日开花结果。","categories":[{"name":"生活的足迹","slug":"生活的足迹","permalink":"https://lhp9916.github.io/categories/生活的足迹/"}],"tags":[]},{"title":"关闭 WPS 广告","slug":"close-ad-of-wps","date":"2016-12-20T14:32:13.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"close-ad-of-wps/","link":"","permalink":"https://lhp9916.github.io/close-ad-of-wps/","excerpt":"","text":"这些年办公软件一直用的WPS，原因它是免费的，不需要破解，安装包又小，安装起来非常快速、方便，兼容性也比较好。可能有人会觉得 WPS 是山寨了人家微软的 MS Office，还真不是！起初 WPS 其实是处于领先地位，但是后来微软财大气粗，借助于 windows 平台，还有允许盗版的态度，后面的结果大家是知道的，有兴趣的话可以去了解下这段历史。 WPS 是永久免费使用，当然这对一个企业的存活显然是不利的，所以，在使用中经常会弹出资讯、广告，下面说一下如何如何关闭广告。首先在开始菜单找到 WPS 的配置工具，选择“高级”，在“其他选项里面”去掉所有的√。当然，如果你像我一样，平时 office 软件使用也不是很多，完成基本的文档、PPT，WPS完全可以满足你的需求。不建议盗版，强烈支持国产优秀软件。顺便给 WPS 做个广告，限时优惠哦。","categories":[{"name":"杂物间","slug":"杂物间","permalink":"https://lhp9916.github.io/categories/杂物间/"}],"tags":[]},{"title":"LNMP环境搭建","slug":"lnmp","date":"2016-12-10T11:28:00.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"lnmp/","link":"","permalink":"https://lhp9916.github.io/lnmp/","excerpt":"","text":"搭建PHP的运行环境对新手来说有点难度，对老手来说也比较繁琐，今天写一篇来记录下。系统版本是 Ubuntu 14.04.5 LTS. 安装PHP一些准备工作1234567sudo apt-get updatesudo apt-get install -y language-pack-en-baselocale-gen en_US.UTF-8sudo apt-get install software-properties-commonsudo LC_ALL=en_US.UTF-8 add-apt-repository ppa:ondrej/phpsudo apt-get update 安装PHP71234sudo apt-get -y install php7.1 php7.1-mysql php7.1-fpm//安装常用扩展sudo apt-get install php7.1-curl php7.1-xml php7.1-mcrypt php7.1-json php7.1-gd php7.1-mbstringphp -v 输出下面的内容表示PHP安装成功 安装MySql123sudo apt-get -y install mysql-server-5.6//安装过程会提示输入roor用户的密码mysql -uroot -p //登录mysql 安装Nginx12sudo apt-get -y install nginxsudo service nginx start 打开浏览器，输入本机的IP 前面安装部分比较简单，接下来配置。 PHP配置1234567sudo vim /etc/php/7.1/fpm/php.ini // 将cgi.fix_pathinfo=1这一行去掉注释，将1改为0sudo vim /etc/php/7.1/fpm/pool.d/www.conf// 配置这个 listen = /var/run/php7.1-fpm.socksudo service php7.1-fpm restart Nginx配置123456789101112131415161718192021222324252627sudo vim /etc/nginx/sites-available/default//Nginx 基础配置如下：listen 80 default_server; listen [::]:80 default_server ipv6only=on; root /vagrant/public; index index.php index.html index.htm; # Make site accessible from http://localhost/ server_name localhost; location / &#123; # First attempt to serve request as file, then # as directory, then fall back to displaying a 404. try_files $uri $uri/ /index.php?$query_string; # Uncomment to enable naxsi on this location # include /etc/nginx/naxsi.rules &#125; location ~ \\.php$ &#123; try_files $uri /index.php =404; fastcgi_split_path_info ^(.+\\.php)(/.+)$; fastcgi_pass unix:/var/run/php7.1-fpm.sock; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params; &#125; 配置完成后重启Nginx 服务1sudo service nginx restart 至此，安装配置结束。 测试最后，我在vagrant目录下部署了laravel项目。需要注意的点，在线上部署时项目目录所有者为: www-data:www-data ，给storage 文件夹权限，修改配置文件后记得重启服务。1sudo chown -R www-data:www-data 项目目录 参考链接https://laravist.com/discuss/laravel/laravel-project-from-scratch-deployment-752","categories":[{"name":"笔记本","slug":"笔记本","permalink":"https://lhp9916.github.io/categories/笔记本/"}],"tags":[]},{"title":"The last month of 2016","slug":"last-month-of-2016","date":"2016-12-04T10:54:53.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"last-month-of-2016/","link":"","permalink":"https://lhp9916.github.io/last-month-of-2016/","excerpt":"","text":"进入12月份了，今年的最后一个月。人可以分为两种：一种是每到年末就没心没肺地等着元旦放假，还有一种人，想起一年即将过去，心中就会泛起淡淡的忧伤。如果你是第一种，那么你也许会活得很快乐幸福。如果你和我一样，已经泛起淡淡的忧伤，尽管我们会努力在某些方面有这样和那样的进步，但随着年华逝去，很多事情还是被耽误，变得来不及。 刚和老爸打完电话，老家在装修，基本上快弄完了。很多时候，我觉得我们是两个世界的人，尤其在进入大学后学习了计算机，接触了互联网。在我们老家，父母都希望孩子认真读书，考上好的大学，选择好的专业，毕业了进好的公司，然后就不要换工作，认认真真踏实地工作。我想中国大部分的家长都是如此吧。可是，人生哪能如此笔直完美。最近看了罗辑思维讲《巨婴症》，有兴趣可以去优酷看看。里面就讲到，比如饭前便后要洗手、天冷要加衣服，其实我们谁不知道，可是父母还是会时常唠叨几句，或许是因为我们在父母的眼里永远是长不大的孩子。 我已经二十多岁的人了，很多事情都有自己的想法和考虑。可能很多意见和父辈不同，甚至截然相反，但是我们会本着对自己和家庭负责的态度来处理每一件事。有人说沟通，可是时代发展如此之快，父母他们这辈人已经无法理解我们的想法和理想，他们甚至不知道我们在干什么。我不求理解和支持，只希望父母能够相信，孩子已经长大，知道以后的路要怎么走，绝不是任性胡来、不负责任，而是不满现状的进取心。我不想有一天，想要做点改变，因为家庭的担子不敢行动，现在这么年轻，为什么不多多尝试新的可能。 人生苦短这件事，我们还是会经常忘掉。所以，我们需要一点东西，就像年末的时刻，它提醒我们，再不做点事，就来不及了。我准备效仿很多大神写下年终总结，记录这一年的工作、生活、学习和认知等方面的经历和感想。16年剩下的任务、计划，要抓紧完成！","categories":[{"name":"观点与感想","slug":"观点与感想","permalink":"https://lhp9916.github.io/categories/观点与感想/"}],"tags":[]},{"title":"怎样才能成为高手？","slug":"how-to-become-a-master","date":"2016-11-21T11:46:51.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"how-to-become-a-master/","link":"","permalink":"https://lhp9916.github.io/how-to-become-a-master/","excerpt":"","text":"学习这件事，从来不存在什么轻松、省力的捷径，就有两条：努力，坚持！这是一个坏消息。 学习本质我总结成一句话，学习的本质就是跨过自己已经熟悉的领域，挑战自己不会、不知道、不懂的东西。 学习方法很重要相信大家都有这样一种经历，在上学的时候总有那么一批人，总感觉天天在玩，但是成绩很好。而总有另一部分人很努力，几乎每天都在看书学习，但是成绩依然很一般，甚至很差，你能说他智商低下么？我不这样认为，我觉得大部分人的智商应该都差不多，不会有根本性的区别，所以归根结底很可能就是学习方法有问题！ 刻意练习什么叫刻意练习？持续做你不会做的事，持续做你不会做的事，持续做你不会做的事。重要的事情说三遍。前面我写过《练习一万小时》，针对一些简单的工作，你确实可以通过长久的训练，训练成下意识的动作。比如一个搞刀削面的师傅，你可以练到最后不看锅在哪，就可以把面削进去。但这只是一个很简单的技能。就像你把“hello,world!”写一万遍，充其量只会增加键盘的磨损，不会带来任何技术的提升。现实中我们程序员所需的技能往往都是非常综合的，我们会不断碰到从未见过的奇葩问题，无从下手。老手却可以轻松解决，因为他们已经积累了很多，新手和老手的区别往往就在于此。刻意去练习，逐渐积累你原来不会的东西。 最后最后，很多人总觉得自己进步很慢，学习效率奇低，这个是正常的，大部分人都跟你一样，包括我自己，套用游戏里常说的话：当你遇到敌人的时候，就说明你路走对了。你需要做的就是确保在正确的道路上，找到适合自己的学习方法，按照自己的节奏，持续不断的努力，坚持下去就足够了！ 最后的最后 说点心里话 。互联网的发展让我们的生活变得什么都很便利，买个东西直接给你送到家，出门滴滴一下就OK。随着各种新工具的出现，我们的时间变得越来越多。但是，你有没有发现那些有钱人，像很多互联网大佬雷军、马云…他们却永远不得闲，永远很辛苦，按理说越是有钱人越是应该享受生活，可事实却不是这样。新工具的出现把人类分成两大波，大部分人躺在那个越来越开阔的舒适区里面去享受生活，可是总有一小部分人带着满身的伤痛，痛苦不堪地向那个非舒适区，也就是学习区进发。这就是学习的真相，一部分人幸福地生活，你越来越休闲，越来越舒服，而另一部分人呢，可能他的财富越来越大，影响力越来越大，但是他付出的代价也很大，所以二者之间你自己选了。","categories":[{"name":"软技能","slug":"软技能","permalink":"https://lhp9916.github.io/categories/软技能/"}],"tags":[]},{"title":"技术人的追求","slug":"programmer-pursuit","date":"2016-11-19T12:21:49.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"programmer-pursuit/","link":"","permalink":"https://lhp9916.github.io/programmer-pursuit/","excerpt":"先说一件小事，前天在微博上看到JellyBool转发的一条微博，一个在校生说感觉PHP对于以后找工作没什么优势，想转Java、前端，很迷茫。这几天我想了很多，也上知乎看了很多相关话题的讨论，有点想法。当然，我这里并非想挑起语言之间的战争，我觉得每门语言的出现，自有他存在的道理和可用的空间。 2016，异常火爆的大前端前段时间 GitHub 发布了一年一度的开源报告，2016年最受欢迎的编程语言是 JavaScript。我想有几方面的原因吧，一是本来 GitHub 上早期的一些开源项目都是 web 前端相关的，二是随着移动端各种跨平台框架的需求，js 被予以重任，如 React Native、weex 等，网上有句话说“一切可以用 JavaScript 写的程序，最终都会被 JavaScript 改写”，三是 js 领域各种框架层出不穷，如 vue.js、angular.js、react.js 等，所以 JavaScript 排名第一并不是很意外。所以有对 web 前端感兴趣的同学，js 是必备技能，而事实上国内需求目前对有经验的 web 前端工程师确实很缺乏，很多时候钱多活少都招不到人。我有一些同学刚毕业做前端薪资待遇非常高。","text":"先说一件小事，前天在微博上看到JellyBool转发的一条微博，一个在校生说感觉PHP对于以后找工作没什么优势，想转Java、前端，很迷茫。这几天我想了很多，也上知乎看了很多相关话题的讨论，有点想法。当然，我这里并非想挑起语言之间的战争，我觉得每门语言的出现，自有他存在的道理和可用的空间。 2016，异常火爆的大前端前段时间 GitHub 发布了一年一度的开源报告，2016年最受欢迎的编程语言是 JavaScript。我想有几方面的原因吧，一是本来 GitHub 上早期的一些开源项目都是 web 前端相关的，二是随着移动端各种跨平台框架的需求，js 被予以重任，如 React Native、weex 等，网上有句话说“一切可以用 JavaScript 写的程序，最终都会被 JavaScript 改写”，三是 js 领域各种框架层出不穷，如 vue.js、angular.js、react.js 等，所以 JavaScript 排名第一并不是很意外。所以有对 web 前端感兴趣的同学，js 是必备技能，而事实上国内需求目前对有经验的 web 前端工程师确实很缺乏，很多时候钱多活少都招不到人。我有一些同学刚毕业做前端薪资待遇非常高。阮一峰老师就说了： 前端变化有多快？两年前，大家都用 Grunt 构建，去年用 Gulp + Browserify 构建，今年用 Webpack 构建，明年可能会使用纯 ES6 的构建工具。每变一次，前面的那些工具就全没用，都白学。要知道，这些工具每一个都是软件系统，单单 Grunt 就有 4 千个插件，然而全没用了。 对于我来说，要做一个UI界面精美、用户体验良好的Web App 难度还是挺大，相比之下，我更倾向做后台，专注于业务逻辑和数据处理。前端技术更新速度实在太快，太累，纠结，学的也不比后端少。 岗位分工对于项目而言，为了更好的开发协作效率，从岗位职责上划分为“后端”、“前端”、“设计”等工种，对于企业而言是非常有必要的，但对于开发者个人而言，其实没有必要刻意地将自己限制在某个领域，而不去了解或尝试其他领域的事情。 微软生态 VS Linux 开源世界我毫不掩饰对 Linux 和 PHP 的喜爱。如果只在微软的世界遨游，而不知道外面的世界，其实是件幸福的事情。微软的成功，是支持商业的技术的成功。微软的杀手锏，不是为了技术而技术，而是为了“生产力”，为了用户的商业成功而追求技术。Linux 的世界是程序员的世界，是对计算机技术充满爱好的geek的世界，也是一批数量很小、但是影响很大的互联网公司的世界。能够轻松在几十台服务器上分布web服务，能够拥有海量的开源工具来用，能够在“毫秒”和“万亿比特”之间游刃有余，Linux 能更加轻松地做到。我同意微软是一家伟大的公司，但我比较偏执，我会把自己的未来都赌在 Linux 和自由软件上面。 最后，总结你必须明白，计算机行业没有一种技术是可以吃一辈子的，所以我们要不断学习来强大自己，并关注行业里的最新动态。最后，编程语言是互通的，学会一门语言再学习另一门技术会比较容易，所以重要的是你必须要先掌握一门技能，假如未来真的受到冲击，不用任何人提醒，你自己会第一时间去变通并且适应，相信我，这是人的本能。而很多时候兴趣才是决定你能走多远的决定因素，如果你的工作能是你的兴趣所在，这难道不是每个人最期待的工作么？","categories":[{"name":"观点与感想","slug":"观点与感想","permalink":"https://lhp9916.github.io/categories/观点与感想/"}],"tags":[]},{"title":"驾照考完了","slug":"pass-the-driver-license","date":"2016-11-04T09:43:02.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"pass-the-driver-license/","link":"","permalink":"https://lhp9916.github.io/pass-the-driver-license/","excerpt":"今天终于把科目四考完了，当然每个科目都是一次性过的，算了下，从报名到现在，大概也有五个月了，比较而言还算挺快的，总算完成一件“大事”了。 其实也经常打开编辑器想说几句，但是经常写了一段就又删除了。可能现阶段的积累还不够，有时候虽然有点想法，真正写出来的话还是会卡壳。这种东西还是宁缺毋滥好！","text":"今天终于把科目四考完了，当然每个科目都是一次性过的，算了下，从报名到现在，大概也有五个月了，比较而言还算挺快的，总算完成一件“大事”了。 其实也经常打开编辑器想说几句，但是经常写了一段就又删除了。可能现阶段的积累还不够，有时候虽然有点想法，真正写出来的话还是会卡壳。这种东西还是宁缺毋滥好！ 最近也没怎么提交代码到Github，学习脚步好像慢下来了，但时间的脚步还是一如既往的前行，已经进入11月份了。还有两个多月就回家过年，真的很快啊。接下来的两个月准备好好学点东西，为明年做点准备，在trello上制定具体的计划。 近期没写代码的时候，在看一些软文类书籍，比如老罗的《我的奋斗》、《生命不息，折腾不止》，还有《只有偏执狂才能生存》，当然这本书也是老罗推荐的。看了几场老罗的演讲也自觉不自觉就成了锤粉了。上个月发布的Smartisan M1，Smartisan OS 3 的One Step、Big Bang，还有讯飞的语言识别确实惊讶到我了。真的，世界就是这么大，由于我们的无知，我们甚至都不知道发生的什么，特别是科技行业，一日千里。如果不出意外的话，下一部手机应该就是锤子了，在此之前，老罗，你要撑住啊！当然，这次发布会之后，我们已经不需要担心锤子的生存了。 我看这些书的目的是为了时不时给自己“打一针”，我这个人向来是缺乏毅力去坚持，可能做了计划执行起来又拖延，当然像我这样的大有人在，也没什么好自卑的，我们出生就是被设计成这样的。所以时常给自己点“精神鸦片”很有必要。 最后，用老罗的一段话来结束吧。 每一个生命来到世间，都注定改变世界，这是你的宿命，你别无选择。你要么把世界变得好一点，要么把世界变得坏一点。有些人不服气，说：“妈的我就不信了，我自杀。”你自杀就把这个世界的自杀率改变了一点点。你如果走进社会，为了生存或是为了什么不要脸的理由，变成了一个恶心的成年人社会中的一员，那你就把这个世界变得恶心了一点点。如果你一生耿直，刚正不阿，没做任何恶心的事情，没有做任何对别人造成伤害的事情，一辈子拼了老命勉强把老婆、孩子、老娘，把身边的这些人照顾好了，没有成名，没有发财，没有成就伟大的事业，一生正直，最后梗着脖子到了七八十岁死掉了，你这一生是不是没有改变世界？你还是改变世界了，你把这个世界变得美好了一点点。因为你，这个世界又多了一个好人，听懂了吧？每一个生命来到世间，都注定改变世界。 PS: 我们每个程序员都有一个梦想，用代码改变世界。","categories":[{"name":"观点与感想","slug":"观点与感想","permalink":"https://lhp9916.github.io/categories/观点与感想/"}],"tags":[]},{"title":"努力一点","slug":"try-hard","date":"2016-10-16T10:17:56.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"try-hard/","link":"","permalink":"https://lhp9916.github.io/try-hard/","excerpt":"所有人一样，都是懒惰的、容易放弃的、坚持不下去的、没有毅力的。这个你也不用感到自卑，因为我们从基因上就是被设计成这样的。 我们可能都有过这样的经历，去听过一场热血沸腾的人生励志讲座，或看过一篇讲某某某是如何通过努力坚持走向成功，然后晚上睡不着觉，第二天特别亢奋，虎虎有生气的这种，这种美好的、进步的状态，通常都维持多久啊？一般就是两三天。有一句话叫三分钟的热血，说的就是这种人。","text":"所有人一样，都是懒惰的、容易放弃的、坚持不下去的、没有毅力的。这个你也不用感到自卑，因为我们从基因上就是被设计成这样的。 我们可能都有过这样的经历，去听过一场热血沸腾的人生励志讲座，或看过一篇讲某某某是如何通过努力坚持走向成功，然后晚上睡不着觉，第二天特别亢奋，虎虎有生气的这种，这种美好的、进步的状态，通常都维持多久啊？一般就是两三天。有一句话叫三分钟的热血，说的就是这种人。 以前，我看过一些所谓的励志的、成功学的垃圾书籍。这类图书还是非常多的，我很瞧不上成功学的书。什么卡耐基啊，谁懂了谁的奶酪啊，什么高效能人士的几个臭毛病啊，《人格的力量》……就这些破书，我从小就不怎么看这些东西，因为我知道这些东西是没有思想、没有内容、没有营养的。全世界的成功书籍，出来几亿种，归根到底就是一句话：只要努力，就能成功。 但你要明白一点就是，当你定下一个艰巨的、阶段性的计划的时候，有这么几本书放在床边，绝对是最好的精神鸦片。你不要迷信那些成功学大师，都是江湖骗子。 这个世界上，“滚滚红尘”太诱惑人了，必须对自己狠一点。近几年没有家庭的责任，年轻精力充沛，正是壮大自己最好的时候。现在，除了上班完成工作以外，我每天晚上回来都保持学习的好习惯，并且每天都要向Github提交代码。好的程序员应该努力抵抗日常的压力和诱惑，做出 beautiful and useful 的作品，祭奠渐渐逝去的青春。","categories":[{"name":"观点与感想","slug":"观点与感想","permalink":"https://lhp9916.github.io/categories/观点与感想/"}],"tags":[]},{"title":"Vagrant使用","slug":"use-vagrant","date":"2016-10-01T16:38:20.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"use-vagrant/","link":"","permalink":"https://lhp9916.github.io/use-vagrant/","excerpt":"初始化安装做web开发的一定都用过虚拟机，以前安装一套新系统要去Ubuntu官网下载一个镜像文件，然后新建一个vitualbox虚拟机，然后需要有人值守的去完成整个系统安装过程，很是繁琐。但用了 Vagrant 以后这个过程变成无人值守的了，意思就是一个命令搞定一切。过程是这样： 首先，保证我的系统上有两个基础软件，一个是 vagrant 一个就是 virtualbox ，安装过程就是双击然后下一步下一步而已，没啥好说的。装好之后，到命令行中就有 vagrant 这个命令了。那么这个时候是不是就要去下载系统光盘了呢？ NO，有一个网站叫做https://vagrantcloud.com/ ，到上面搜一下 ubuntu，排名第一的这个 ubuntu / trusty64 就是 ubuntu 公司提供的 ubuntu 14.04 的64位系统镜像文件。","text":"初始化安装做web开发的一定都用过虚拟机，以前安装一套新系统要去Ubuntu官网下载一个镜像文件，然后新建一个vitualbox虚拟机，然后需要有人值守的去完成整个系统安装过程，很是繁琐。但用了 Vagrant 以后这个过程变成无人值守的了，意思就是一个命令搞定一切。过程是这样： 首先，保证我的系统上有两个基础软件，一个是 vagrant 一个就是 virtualbox ，安装过程就是双击然后下一步下一步而已，没啥好说的。装好之后，到命令行中就有 vagrant 这个命令了。那么这个时候是不是就要去下载系统光盘了呢？ NO，有一个网站叫做https://vagrantcloud.com/ ，到上面搜一下 ubuntu，排名第一的这个 ubuntu / trusty64 就是 ubuntu 公司提供的 ubuntu 14.04 的64位系统镜像文件。新建一个目录，执行1234vagrant initmkdir myprojectcd myprojectvagrant init ubuntu/trusty64 这样目录中就会多出一个文件叫 Vagrantfile 所有的机关也就都在这里了，继续执行1vagrant up 就会到 vagrant cloud 网站上下载 box 进行安装了。如果是第一次下载，可以需要等十来分钟，所以一般我是早上起来干这个活，网速比较快。但是，现在的情况是我之前以经在另外一个项目中执行过这个操作了，那么也就是这个box已经存在我本地机器上了。这时候，vagrant导入这个box进来，只需要几秒钟就可以在创建出一个新的virtualbox虚拟系统了，vagrant的基本思路是为每一个项目创建自己的一个虚拟机。而且这个系统和之前的系统是完全隔离的。如果我过一段时间不需要这台虚拟机了，执行 vagrant destroy 就都清理干净了，而且其他同样使用这个 box 虚拟机也不会受到影响。打开 virtuabox的图形界面可以看到又多了一个虚拟机，也可以去修改配置，比如默认内存大小是 512，我一般用 2048 。Vigrant 有一个好处是所有一切都在命令行和配置文件中搞定，这样比图形界面用起来方便的多，所以一般是不需要启动 virtualbox 图形界面的。 基本配置就拿修改内存为例子。打开 Vagrantfile 添加config.vm.provider “virtualbox”do |v| v.memory = 2048end这样运行 vagrant reload 就修改成功了。 创建新用户vagrant ssh 登陆进来的用户名是 vagrant，这个用户挺好，执行 sudo 是不需要输入密码的，开发中实际使用挺好用的。不过如果我非要创建自己的用户也是可以的。sudo adduser lhp –ingroup sudo如何用这个用户的身份来登录呢？运行 vagrant up 的时候，可以看到有输出==&gt; default: Forwarding ports…default: 22 =&gt; 2222 (adapter 1)所以登录命令可以这样：ssh lhp@127.0.0.1 -p 2222输入密码就可以登录成功了。 设置 IP添加config.vm.network “public_network”, ip: “192.168.3.100”以后可以浏览器中用 192.168.3.100 来访问里面的网站了。 共享文件夹默认情况下，Vagrantfile 所在的这个文件夹，会自动对应虚拟机里面的 /vagrant 这个目录。这个意味着我不需要在虚拟机里面配置 sublimeText vim git 搜狗输入法 这些工具了，Mac/windows依旧是我写代码的环境。ubuntu 虚拟机是项目的安装运行环境。这个分工是太合理了！通常的做法，项目源码就放在 myproject 目录下，把 Vagrantfile 和源码一起用 git 统一控制。然后再把apache/nginx的工作目录设置为/vagrant ,这样我们修改的文件就会实时同步到/vagrant 这个目录下，通过设置的IP来访问。 vagant 常用命令12345vagrant init #初始化box的操作vagrant up #启动虚拟机的操作vagrant halt #关闭当前虚拟机vagrant relaod #重新启动虚拟机，主要用于重新载入配置文件vagrant destroy #停止当前正在运行的虚拟机并销毁所有创建的资源 vagrant box管理1234vagrant box listvagrant box addvagrant box removevagrant box update","categories":[{"name":"技术分享","slug":"技术分享","permalink":"https://lhp9916.github.io/categories/技术分享/"}],"tags":[]},{"title":"layer——优雅的web弹层组件","slug":"layer","date":"2016-09-28T13:29:36.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"layer/","link":"","permalink":"https://lhp9916.github.io/layer/","excerpt":"在web应用交互体验中，弹出框是一个十分重要功能，可是浏览器原生的alert却是这般模样， 这模样在现代化的web页面中实在不忍直视，今天给大家推荐一个优雅的web弹层的组件——layer。先一睹为快","text":"在web应用交互体验中，弹出框是一个十分重要功能，可是浏览器原生的alert却是这般模样， 这模样在现代化的web页面中实在不忍直视，今天给大家推荐一个优雅的web弹层的组件——layer。先一睹为快 详细的介绍和文档，当然还是参见官网。我简单介绍下用法和我的封装dialog.js123456789101112131415161718192021222324252627282930313233343536373839404142var dialog = &#123; //错误弹出层 error: function (message) &#123; layer.open(&#123; content: message, icon: 2, title: &apos;错误提示&apos;, &#125;); &#125;, //成功弹出层 success: function (message, url) &#123; layer.open(&#123; content: message, icon: 1, yes: function () &#123; location.href = url; &#125; &#125;); &#125;, //确认弹出框 confirm: function (message, url) &#123; layer.open(&#123; content: message, icon: 3, btn: [&apos;是&apos;, &apos;否&apos;], yes: function () &#123; location.href = url; &#125;, &#125;); &#125;, //无需跳转到指定页面的确认弹出框 toConfirm: function (message) &#123; layer.open(&#123; content: message, icon: 3, btn: [&apos;确定&apos;], &#125;); &#125;,&#125; 具体用法，先引入js文件，（注意，layer依赖jquery）123&lt;script type=&quot;text/javascript&quot; src=&quot;js/jquery-3.1.1.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;js/layer/layer.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;js/dialog.js&quot;&gt;&lt;/script&gt; 接着在js代码中调用，12dialog.error(&quot;登录失败！&quot;);dialog.toConfirm(&quot;确定删除？&quot;); 还是那句话，想要更深入的学习layer，最好的方式就是多看官方文档，layer——希望对你有帮助。","categories":[{"name":"技术分享","slug":"技术分享","permalink":"https://lhp9916.github.io/categories/技术分享/"}],"tags":[]},{"title":"Hexo换主题，域名绑定","slug":"more-about-hexo","date":"2016-09-25T14:09:54.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"more-about-hexo/","link":"","permalink":"https://lhp9916.github.io/more-about-hexo/","excerpt":"why Hexo ?我写博客的萌芽阶段还是在学校学网页设计的时候，老师叫我们写一个个人网站作为节课作业，当时就用html/css/js写了几个页面交了上去，那时候还不知道有github的存在。后来无意间在慕课网上看到了有关 git和github的课程，认识了happypeter老师,他是用Jekyll+css写的博客托管到github上，Jekyll可以用markdown语法来写作，但是要自己写css装饰，对于我一个做后台的来说，不太擅长做页面美化的工作。后来也是机缘巧合在github上发现李笑来先生的博客，发现了Hexo。hexo是一个快速、简洁且高效的博客框架。支持 Markdown，并快速将markdown编译生成html静态页面，支持一键部署……还有，支持换主题，并提供了很多主题可供选择，对于不做会页面美化的人来说，简直是福音。所以，我开始全面拥抱Hexo。","text":"why Hexo ?我写博客的萌芽阶段还是在学校学网页设计的时候，老师叫我们写一个个人网站作为节课作业，当时就用html/css/js写了几个页面交了上去，那时候还不知道有github的存在。后来无意间在慕课网上看到了有关 git和github的课程，认识了happypeter老师,他是用Jekyll+css写的博客托管到github上，Jekyll可以用markdown语法来写作，但是要自己写css装饰，对于我一个做后台的来说，不太擅长做页面美化的工作。后来也是机缘巧合在github上发现李笑来先生的博客，发现了Hexo。hexo是一个快速、简洁且高效的博客框架。支持 Markdown，并快速将markdown编译生成html静态页面，支持一键部署……还有，支持换主题，并提供了很多主题可供选择，对于不做会页面美化的人来说，简直是福音。所以，我开始全面拥抱Hexo。 换主题Hexo 换主题非常容易，您只要在 themes 文件夹内，新增一个任意名称的文件夹，并修改 _config.yml 内的 theme 设定，即可切换主题。你可以去https://hexo.io/themes/选择自己喜欢的主题。 比如，我选择的NexT，接下来进入作者的github，找到该主题的项目仓库及使用文档，当然这些你也可以通过搜索引擎完成。首先下载主题，进入你的项目目录，1git clone https://github.com/iissnan/hexo-theme-next themes/next 启用主题,与所有 Hexo 主题启用的模式一样。当克隆/下载完成后打开站点配置文件，找到theme字段，并将其值更改为 next。1theme: next 验证主题，继续输入1hexo s 此时即可使用浏览器访问 http://localhost:4000，检查站点是否正确运行。关于更多的主题设定，我这里就不多说，相信通过看文档就可以了，毕竟看文档也是程序员必备的能力。 绑定个人域名你可以通过yourname.github.io来访问你的博客，还可以绑定你的域名。如果你没有可以先到万网上注册一个，.top的域名最便宜，首年才2块钱。我注册了一个域名liuhaipeng.top，接下来去控制台-&gt;域名-&gt;解析，添加这么一条记录。然后在source目录下添加一个名为CNAME的文件，文件里面写入注册好的域名。最后，把项目部署到github上，那么你就可以通过你注册的域名来访问你的博客网站。 hexo常用命令及简写我写博客的流程通常是这样1234hexo new &lt;title&gt; #新建文章，写作hexo server #实时预览hexo generate #生成静态页面至public目录 hexo deploy #将.deploy目录部署到GitHub 当然，如果每次输入那么长命令，那么一定想到用简写：1234hexo n == hexo newhexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy","categories":[{"name":"技术分享","slug":"技术分享","permalink":"https://lhp9916.github.io/categories/技术分享/"}],"tags":[]},{"title":"Hexo+Github Pages建立博客站点","slug":"create-my-blog-site","date":"2016-09-24T13:34:59.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"create-my-blog-site/","link":"","permalink":"https://lhp9916.github.io/create-my-blog-site/","excerpt":"开始之前开始之前，我假定你已经注册了Github账号，并已经安装好了git,nodejs和一个文本编辑器。如果还没有，也可以先假装已经安装好了这些工具……听起来好像没道理，但你试试就知道了。 在 Github 上创建一个 Repo在浏览器中登录 Github，创建一个 Repo，名称格式为 yourname.github.io。比如，我个人的 Github 账户用户名是 lhp9916，所以，我的这个 Repo 的名称就是 lhp9916.github.io。这里是Github官方的pages服务介绍 pages.github.com可以参考一下。","text":"开始之前开始之前，我假定你已经注册了Github账号，并已经安装好了git,nodejs和一个文本编辑器。如果还没有，也可以先假装已经安装好了这些工具……听起来好像没道理，但你试试就知道了。 在 Github 上创建一个 Repo在浏览器中登录 Github，创建一个 Repo，名称格式为 yourname.github.io。比如，我个人的 Github 账户用户名是 lhp9916，所以，我的这个 Repo 的名称就是 lhp9916.github.io。这里是Github官方的pages服务介绍 pages.github.com可以参考一下。 安装Hexo首先确认本地已经安装好了git和npm。npm是nodejs的一个包管理工具，nodejs安装时会自动安装npm。12git --versionnpm --version 在命令行中继续输入,即可安装Hexo12npm install hexo -gnpm install hexo-cli -g 初始化本地站点12345hexo init &lt;folder&gt; //初始化站点cd &lt;folder&gt; //进入项目目录npm install //安装hexo依赖包hexo generate //生成网站hexo server //启动一个本地服务器 这些完成之后，你就可以打开浏览器，在地址栏里输入： localhost:4000，在本地先看看网站是什么样子了。 配置你可以在 _config.yml 中修改大部份的配置。具体的可以参考hexo的官方文档，里面有详细的介绍。修改配置必须结束hexo server服务，重新启动后才能生效。 写作你可以执行下列命令来创建一篇新文章。1hexo new &lt;title&gt; 执行后会在source/_posts目录下生成一个.md文件，打开就可以输入你想输入的内容。 部署到github上去Github把你的Repo的git地址拷贝出来。地址是类似https://github.com/yourname/yourname.github.io.git 这种形式（其中，yourname是你github上的用户名）。选择 _config.yml 文件，找到deploy那一部分，改成：123deploy: type: git repo: https://github.com/yourname/yourname.github.io.git 注意，把 yourname 改成你的 Github 用户名。(对了，采用git方式部署，你必须事先在github上添加你的SSH key.)当然你需要安装hexo-deployer-git这个部署工具。1npm install hexo-deployer-git --save 现在是最后一步了，在命令行里依次输入：1hexo deploy 部署成功后，在浏览器中输入yourname.github.io即可看到页面。 阶段性成果到现在为止，你已经学会写作并发布了自己所写的文章，假定一切进行得很顺利。不一定很简单 —— 对新手因为上面的过程中，每一个尽管相当简单的步骤，都可能出现各种莫名其妙的错误（比如，不小心使用了中文输入法的点字符“。”等等）…… 保持耐心，反复来过就好。遇到异常的地方，看下官方文档，google一下，你会解决90%的问题。当然你也可以发邮件给我（lhp9916@gmail.com），我很乐意和你一起解决问题。 继续折腾没完事儿呢…… 这才刚刚开始，你现在有了个所有人都可以访问的站点，然后就要做起码两件事儿了： 学会使用 Markdown 语法书写文章把站点装扮得更好看一些，也就是更换主题 好了，今天就到这了，下一篇再聊聊如何给博客换主题和绑定自己的域名。","categories":[{"name":"技术分享","slug":"技术分享","permalink":"https://lhp9916.github.io/categories/技术分享/"}],"tags":[]},{"title":"2016 中秋","slug":"Mid-Autumn-Festival-2016","date":"2016-09-15T09:34:23.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"Mid-Autumn-Festival-2016/","link":"","permalink":"https://lhp9916.github.io/Mid-Autumn-Festival-2016/","excerpt":"hello，今天是中秋节，先祝大家节日快乐！放假了，空闲之余来闲聊几句。 你我的大师梦每当有人在我面前大谈理想的时候，我容易想到的一句话是：站着说话不腰疼。如果我吃穿不愁，那么民主自由艺术浪漫，我想怎么谈都可以。但是人生最大的矛盾就是：我们每每有最最高尚的追求，但却次次都归于放弃，原因只有一个：我们要吃饭，我们需要钱。","text":"hello，今天是中秋节，先祝大家节日快乐！放假了，空闲之余来闲聊几句。 你我的大师梦每当有人在我面前大谈理想的时候，我容易想到的一句话是：站着说话不腰疼。如果我吃穿不愁，那么民主自由艺术浪漫，我想怎么谈都可以。但是人生最大的矛盾就是：我们每每有最最高尚的追求，但却次次都归于放弃，原因只有一个：我们要吃饭，我们需要钱。大师，我的理解就是，对自己的专业领域有着终身的热爱，同时对社会责任有所怀抱和担当的人。这几年的探索和学习，我找到了自己最喜欢得技术栈——“LNMP”。从此，我再也不是没有家的孩子，因为我找到了一个专业方向，可以不断耕耘下去。我觉得我对大师的要求不是太高，只要我自己能热爱一个领域，保持学习的冲动很多年，那我就是大师了。今年是毕业后的第二个年头，不能再以“刚毕业”、“缺乏经验”这个的借口来安慰和要求自己。我还年轻，现在正是年轻最有精力的时候，多学点东西。未来的某一天，你会感谢那个当初拼命学习的自己。快乐是一切的动力。我很庆幸我的职业同时也是我的兴趣，加油吧少年。","categories":[{"name":"观点与感想","slug":"观点与感想","permalink":"https://lhp9916.github.io/categories/观点与感想/"}],"tags":[]},{"title":"9月，天气正好","slug":"plan-sept","date":"2016-09-08T06:54:05.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"plan-sept/","link":"","permalink":"https://lhp9916.github.io/plan-sept/","excerpt":"先汇报下考驾照的进度，前几天考科目二一把过，感觉好爽，不枉我前段时间的认真练习。长训安排在十一假期之后，所以会有将近一个多的“休闲”的时间。如果一切顺利，到十月底就可以考科三，年底就拿证了。 进入九月份，秋高气爽，新的学期开始了，我也要计划计划“新学期”的学习任务了。进入社会后，总感觉被推着走，怎么也刹不住，日子就一天一天就这么过了。当初的梦想呢，是否被遗忘？不，它一直在。","text":"先汇报下考驾照的进度，前几天考科目二一把过，感觉好爽，不枉我前段时间的认真练习。长训安排在十一假期之后，所以会有将近一个多的“休闲”的时间。如果一切顺利，到十月底就可以考科三，年底就拿证了。 进入九月份，秋高气爽，新的学期开始了，我也要计划计划“新学期”的学习任务了。进入社会后，总感觉被推着走，怎么也刹不住，日子就一天一天就这么过了。当初的梦想呢，是否被遗忘？不，它一直在。这两年很多人已经被新技术冲击得有些找不着方向了，同一类东西，前者还没学完，后者就开始火爆了，紧接着又是一阵技术的凋零和新技术的出现，这样搞久了也会有一丝的疲倦。首先你要明确方向，当然寻找方向也需要探索，这一年多时间的探索，做Web是最适合我的事情了，也有了一定的积累，当然需要进一步深入。计划做几个项目，初步确定为cms系统，微信开发，爬虫这三个项目，后面都会开源在github上。 工作是第一要务，先把工作做好，有余力再去给自己充电。但是不得不说顺力并不适合我，既然答应了，就要先完成项目，其他的以后再说吧。从这件事我也吸取到了教训，不同的技术栈还是很大的差异的，不要觉得自己懂点皮毛就轻易去尝试，否则你会面临很多问题，结果把自己搞得精疲力尽，也学不了多少知识。我觉得术业有专攻比较好，当然有余力去了解别的技术也行，为了更好地与人交流工作，同时也可以开阔视野。但是毕竟人的精力有限，想要样样精通是不可取的，因为样样都会，就意味着样样都不精通。专注，你才能做得更好。 最近在看《程序员修炼之道》，书中所言，颇有感悟。从码农到码神，甚至到大牛、大神，这条路还十分遥远和艰辛，专注并持之以恒，你我共勉。","categories":[{"name":"观点与感想","slug":"观点与感想","permalink":"https://lhp9916.github.io/categories/观点与感想/"}],"tags":[]},{"title":"时间都去哪儿了","slug":"fast-time","date":"2016-08-24T14:25:11.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"fast-time/","link":"","permalink":"https://lhp9916.github.io/fast-time/","excerpt":"hello，好久不见，最近比较忙，除了六天制的上班外，每天下午还得请假两个小时去练车，回来都八九点的样子。算是比较辛苦吧，早点练好拿到驾照就好了，了却人生一件“大事”。 去年的今天，我正式入职安盛，到今天刚好就参加工作满一年了，虽然现在人不在安盛，但是在那里我却学到了很多知识和经验，很感谢它给我人生第一站的机会。铺垫了这么多，就知道今天要写的是回忆和总结。时间荏苒一年飞逝，我到现在还以为自己是刚毕业的学生，仔细回忆，其实已经隔了一年。晃晃悠悠，时间都去哪里了，我又从这些时间的夹缝中获得了什么？","text":"hello，好久不见，最近比较忙，除了六天制的上班外，每天下午还得请假两个小时去练车，回来都八九点的样子。算是比较辛苦吧，早点练好拿到驾照就好了，了却人生一件“大事”。 去年的今天，我正式入职安盛，到今天刚好就参加工作满一年了，虽然现在人不在安盛，但是在那里我却学到了很多知识和经验，很感谢它给我人生第一站的机会。铺垫了这么多，就知道今天要写的是回忆和总结。时间荏苒一年飞逝，我到现在还以为自己是刚毕业的学生，仔细回忆，其实已经隔了一年。晃晃悠悠，时间都去哪里了，我又从这些时间的夹缝中获得了什么？高中毕业的时候并不知道什么叫职业规划，选择专业的时候，其实选择也不是很多，不知道是不是兴趣的原因最后选择了计算机，其实那时候接触电脑很少。进入大学，前面一半时间都是学基础课程，也没怎么听，周末课余都是玩，考试不挂科就行了，也买了自己的第一台电脑，熟悉了电脑基本硬件和操作系统…后面一年就疯狂地学各种技术，懂了一点html/css/js就能写一些简单网页，学了c#/sql server就在电脑写winform小程序，学了java就在安卓手机上写一些demo小程序，学了PHP/mysql/linux就开始尝试开发后端服务系统。那段时间看了很多书和视频教程，时间很快就过去了。大学最后的半年没什么课，就开始找工作，可是荆州这个地方的经济水平，很难找到专业的对口的工作，最后顶着巨大的就业压力去了深圳，才进入了安盛。没想到还没来得及挥洒青春，大学就已经过去了，没有多少留恋的东西，很平静地就过去了。 这一年，自己的情绪就像是一根波浪线，跌宕起伏，时而激情澎湃，时而低靡沉沦。在公司上班，照着大纲过日子；假日里的休闲，随着伙伴四处闲荡或者在家睡大觉、追剧。有明确的方向，但是似乎也不怎么明确。 每次在给自己制定目标的时候，总怕苦了自己，往松里定，弹性排列，没有紧凑感，很松散，很随性。每次遇到问题的时候，总想着能回避便回避，不能回避干它两下再回避，躲躲闪闪地过日子，解决问题的能力看似提高了，实则是积攒问题的水平更强了。很多时候，解决了一个”复杂“的问题，恨不得给自己点 100 个赞，得瑟个三五六天，然后开始解决下一个“复杂”的问题，接着继续点赞… 这一年，很多时候，自己处于漂浮状态，很离散。 接下来一年，我打算把时间花得更加划算。只专注几件事情，做好它，一直做。做技术和开车一样，“无他，唯手熟尔”。这个结论用在其他行业，想必也同样适用。经一年时间的探索，我想我知道自己想做什么了。 恩，好了，又到凌晨，就这么多，得去睡觉了！","categories":[{"name":"观点与感想","slug":"观点与感想","permalink":"https://lhp9916.github.io/categories/观点与感想/"}],"tags":[]},{"title":"练习一万小时","slug":"ten-thousand-hours","date":"2016-07-28T02:51:46.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"ten-thousand-hours/","link":"","permalink":"https://lhp9916.github.io/ten-thousand-hours/","excerpt":"前几天在网上看到这个理论，《一万小时天才理论》的作者是丹尼尔·科伊尔，他提到及这个理论由安德斯▪埃里克森提出，并由心理学界负有盛名的高产心理学家，诺贝尔奖获得者赫伯特·西蒙和埃里克森共同验证。当然，这个10000不是一个具体的数字，但大体上不会差很远。不过这里的“天才”，应该不是指天赋极高的人，而是说普通人只要在某个某个方面，坚持研究和不断学习总结，就能成为某个领域的专家。","text":"前几天在网上看到这个理论，《一万小时天才理论》的作者是丹尼尔·科伊尔，他提到及这个理论由安德斯▪埃里克森提出，并由心理学界负有盛名的高产心理学家，诺贝尔奖获得者赫伯特·西蒙和埃里克森共同验证。当然，这个10000不是一个具体的数字，但大体上不会差很远。不过这里的“天才”，应该不是指天赋极高的人，而是说普通人只要在某个某个方面，坚持研究和不断学习总结，就能成为某个领域的专家。那么在这一万小时要怎么做呢。第一要有正确的训练方法去刻意练习，第二要有不断的关于修正的反馈，第三要根据反馈通过行动不断微小改进，第四要坚持。 任何时候，只要给自己一个目标，坚持下去、反复练习，重复再重复，你也可以成为这个领域的天才。 如果说天才等于99%的努力加1%的灵感，但我们不知道那1%的灵感会何时降临，所以我们只有准备好了那99%的努力，等灵感悄然降临时，我们才能彻底地反击。","categories":[{"name":"软技能","slug":"软技能","permalink":"https://lhp9916.github.io/categories/软技能/"}],"tags":[]},{"title":"路在何方","slug":"where-is-the-way","date":"2016-07-21T01:04:51.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"where-is-the-way/","link":"","permalink":"https://lhp9916.github.io/where-is-the-way/","excerpt":"恩，毕业已经一年多了，常常我会反思一下(这应该是个好习惯)，但也常常会感到迷茫，找不到属于自己的路。每每迷惘的时候，我都会向Google求助。 技术栈的选择我习惯于讲自己是个“程序员”，而不是特定自己是个“Java程序员”、“.NET程序员”或者其他“XX程序员”。如果我们把自己定位于“做一个Programmer”或者“做一个System Engineer/Software Engineer”，我觉得最好不要在潜意识里限制自己使用的开发工具。工程师的工作是“解决问题”——使用自己顺手的工具，提供现实可行的解决方案；你用着顺手的工具越多，工作起来效率越高。窃以为，限制自己是个“.NET程序员”的坏处多多：当项目组转去用另一种开发工具时，你会闹情绪，觉得我.NET还没用明白呢，干嘛要费劲巴力地改另一种（其实这事儿基本上你做不了主）；被迫开始用另一种工具后你会陷入工具之争，抱怨不如.NET舒服（其实是你用着还不顺手）；如果你坚持只做.NET，找工作时你也会错误许多机会（其实很少有公司使用单一工具和语言）。","text":"恩，毕业已经一年多了，常常我会反思一下(这应该是个好习惯)，但也常常会感到迷茫，找不到属于自己的路。每每迷惘的时候，我都会向Google求助。 技术栈的选择我习惯于讲自己是个“程序员”，而不是特定自己是个“Java程序员”、“.NET程序员”或者其他“XX程序员”。如果我们把自己定位于“做一个Programmer”或者“做一个System Engineer/Software Engineer”，我觉得最好不要在潜意识里限制自己使用的开发工具。工程师的工作是“解决问题”——使用自己顺手的工具，提供现实可行的解决方案；你用着顺手的工具越多，工作起来效率越高。窃以为，限制自己是个“.NET程序员”的坏处多多：当项目组转去用另一种开发工具时，你会闹情绪，觉得我.NET还没用明白呢，干嘛要费劲巴力地改另一种（其实这事儿基本上你做不了主）；被迫开始用另一种工具后你会陷入工具之争，抱怨不如.NET舒服（其实是你用着还不顺手）；如果你坚持只做.NET，找工作时你也会错误许多机会（其实很少有公司使用单一工具和语言）。 1、操作系统、数据结构、算法、网络等基础技术应该在大学时代深入学习，如果毕业了你还没有掌握这些内容，那就随用随学好了。学习这些基础理论极为枯燥，只有实际工作中的需求才能给你最大的学习动力去掌握这些艰深的内容。 2、至少要掌握一门静态语言，比如 C、C++、Java、C#、Objective-C 等。至少掌握一门动态语言，比如 Python、Ruby、PHP 等。 3、推荐学习一些同时具备动态语言和静态语言的特性语言，比如 Go、Swift、Scala 等。这样你会对面向对象编程、面向过程编程、编译型、解释型语言有更深入的了解。 4、系统的构建自己的知识体系，而不是局限在某个点上。很多时候难以预料未来技术的走向，但是你至少要构建自己的技术壁垒和平台。学习 Java，就应该构建你自己的 JavaEE 平台；Objective-C 对应 iOS/OS X 开发平台；C#，对应 .Net 平台，SQL，对应数据库平台。如果你在用 ActionScript，那你不应该局限在 Flex 上，你对应的是整个前端平台。 立足平台，你会站得很稳。立足一个点，你可能摔的很惨，就是这样。 5、主动选择技术方向比被动等待好。根据自己的兴趣和技术的发展主动选择，有时候放弃也意味着得到。 6、不要过于追新，不要每出一门「颠覆性」的语言或技术都投入精力物力。追新的后果很可能是该学的没学会，不该学的学完也忘了。 7、也不要过于保守，比如 Go、Swift、Docker 等技术，我个人以为是值得投入时间和精力的技术。 最后，还是要坚持下去，随着时间推移你会获得很多。","categories":[{"name":"观点与感想","slug":"观点与感想","permalink":"https://lhp9916.github.io/categories/观点与感想/"}],"tags":[]},{"title":"谈谈写博客","slug":"why-write-blog","date":"2016-07-10T14:29:58.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"why-write-blog/","link":"","permalink":"https://lhp9916.github.io/why-write-blog/","excerpt":"我真正写博客是从今年年初开始的，起因是在github上看到很多大牛们都有自己的个人博客网站，感觉挺牛X的样子，于是乎就自己折腾了一个。从年初到现在，半年的时间里，我也陆续写了十来篇小短文，算是很欣慰的事情了。但是，总觉得好难坚持下去，大概是因为肚子里面没货吧。本来我也不是作家、诗人，对一个写代码的程序员文笔要求不要太高哈。","text":"我真正写博客是从今年年初开始的，起因是在github上看到很多大牛们都有自己的个人博客网站，感觉挺牛X的样子，于是乎就自己折腾了一个。从年初到现在，半年的时间里，我也陆续写了十来篇小短文，算是很欣慰的事情了。但是，总觉得好难坚持下去，大概是因为肚子里面没货吧。本来我也不是作家、诗人，对一个写代码的程序员文笔要求不要太高哈。 什么是博客“博客”就是在网络上公开的日记，也是一个人“敞开的心扉”，它涉及到文化、思想、工作、休闲、及生活情感等方面的东西，而且还有精彩的网络互动及精选最有价值的信息、知识与资源共享。因此，如何发挥一个人的无限表达力，如何达到以文会友，结识和汇聚朋友，进行深度交流沟通，这就关系到一个人的自身素质和为人处世及写作水平。由此看来，写博客并非易事，那些胡编乱造，专门抄袭复制过来的东西，以及其中充斥着“大话、空话以及粗野话”言语的文章，这与博客的写作要求相距甚远，只能是庸俗之作，是不登大雅之堂的。 以文会友是写博客的目的，当别人需要去了解你的时候，就读读你写的东西，可以在第一时间判断出你这个人值不值得喜欢。这样博客就会成为你的技术名片，交到志同道合的朋友还有一点，写博客能给人带来成就感。现在人们生活节奏很快，一天、一周、一月，甚至一年很快就过去了，当一段时间以后，再回头看看自己写下的一篇篇小短文，还是会充满自豪感。以上是我对“博客”的一些看法，一己之见，不足挂齿。","categories":[{"name":"观点与感想","slug":"观点与感想","permalink":"https://lhp9916.github.io/categories/观点与感想/"}],"tags":[]},{"title":"换了台新电脑","slug":"buy-new-computer","date":"2016-06-26T15:13:20.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"buy-new-computer/","link":"","permalink":"https://lhp9916.github.io/buy-new-computer/","excerpt":"终于，在我的生日来临之际，我换了台新电脑，算是给自己的生日礼物，遂作文以记之。 换件好“兵器”吧看过李笑来先生的博客，里面曾提到，“衣服简谱一点没关系，食物清淡一点没关系，工具不够精良绝对不行。千万不要在工具上舍不得花钱，否则你注定落魄一生”。老话就说，“工欲善其事必先利其器”，电脑——作为我们程序员的“兵器”，真的非常重要。我人生第一台笔记本（东芝C805，学霸机的配置），它是我编程的开始，被我“折磨”已三年有余，尽管我换了固态硬盘和加到10G的内存，还是无力回天，是要让它寿终正寝了。","text":"终于，在我的生日来临之际，我换了台新电脑，算是给自己的生日礼物，遂作文以记之。 换件好“兵器”吧看过李笑来先生的博客，里面曾提到，“衣服简谱一点没关系，食物清淡一点没关系，工具不够精良绝对不行。千万不要在工具上舍不得花钱，否则你注定落魄一生”。老话就说，“工欲善其事必先利其器”，电脑——作为我们程序员的“兵器”，真的非常重要。我人生第一台笔记本（东芝C805，学霸机的配置），它是我编程的开始，被我“折磨”已三年有余，尽管我换了固态硬盘和加到10G的内存，还是无力回天，是要让它寿终正寝了。其实我挺想换Mac的，我关注的大师李笑来先生、happypeter,还有一些国外的大牛们，他们都是用Mac作为开发平台，也推荐我们将mac作为自己的开发平台。确实，OS X （现已改名macOS）是一个非常完美的OS，无奈囊中羞涩，唉，以后慢慢攒钱再买吧，加油。","categories":[{"name":"杂物间","slug":"杂物间","permalink":"https://lhp9916.github.io/categories/杂物间/"}],"tags":[]},{"title":"毕业一年了","slug":"graduated-a-year","date":"2016-06-07T16:00:00.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"graduated-a-year/","link":"","permalink":"https://lhp9916.github.io/graduated-a-year/","excerpt":"又是一年端午节又是一年端午节，依然还很清晰的记得也是去年端午节，坐了十几个小时火车来到深圳，从此真正步入社会。上班、下班、放假，日子很快就从指间流逝。这一年中从找工作，到初入职场的懵懂，到慢慢有一点经验，经历了一些事和认识了一些人，结识了一帮新朋友。每一次回忆总结的时候总感觉是痛苦的，对未来的迷茫，是一步步被时间的巨轮推着向前，还是做点不同寻常的事，应该怎么做，停不下来！","text":"又是一年端午节又是一年端午节，依然还很清晰的记得也是去年端午节，坐了十几个小时火车来到深圳，从此真正步入社会。上班、下班、放假，日子很快就从指间流逝。这一年中从找工作，到初入职场的懵懂，到慢慢有一点经验，经历了一些事和认识了一些人，结识了一帮新朋友。每一次回忆总结的时候总感觉是痛苦的，对未来的迷茫，是一步步被时间的巨轮推着向前，还是做点不同寻常的事，应该怎么做，停不下来！ 我要回去异地恋很痛苦。还有俗语有云，“父母在，不远游”，自从去年春节回家的艰辛，体会到什么叫距离，所以我一定要回去，今年？还是明年呢？可能在外面待得时间越长越难回去，一毕业就来到广东，然后就在这里工作、生活，定居下来，这样的人太多了。所以我想回去。","categories":[{"name":"观点与感想","slug":"观点与感想","permalink":"https://lhp9916.github.io/categories/观点与感想/"}],"tags":[]},{"title":"谈谈职业路与技术方向","slug":"think-in-sunli","date":"2016-05-23T16:00:00.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"think-in-sunli/","link":"","permalink":"https://lhp9916.github.io/think-in-sunli/","excerpt":"hi,好久不见。刚来顺力，也就是4月初的时候，我宣布转向了C#，但是这一段时间我做的却是安卓，客户有需求要做App。物流这个行业做App确是一个趋势，貌似是带着工业4.0的影子。 计算机编程技术，（除了Apple系的）我都懂一些，仅仅是懂一点语法。Android方面离做项目还有段距离，离独立主导项目恐怕还有很大一段距离，目前只有一年的PHP开发经验。这次这个项目是一个人，而且没有技术支援，可能要克服的难点有很多，不过也在于需求的复杂度。我目前的想法是愿意去试一试，应该不会很难的，trust me!最坏的结果就是离开了，我能承受。","text":"hi,好久不见。刚来顺力，也就是4月初的时候，我宣布转向了C#，但是这一段时间我做的却是安卓，客户有需求要做App。物流这个行业做App确是一个趋势，貌似是带着工业4.0的影子。 计算机编程技术，（除了Apple系的）我都懂一些，仅仅是懂一点语法。Android方面离做项目还有段距离，离独立主导项目恐怕还有很大一段距离，目前只有一年的PHP开发经验。这次这个项目是一个人，而且没有技术支援，可能要克服的难点有很多，不过也在于需求的复杂度。我目前的想法是愿意去试一试，应该不会很难的，trust me!最坏的结果就是离开了，我能承受。刚提到Apple，就在这里就顺便提一下，看了几场Apple的WWDC发布会，我决定买个MacBook，我喜欢上了OS X这个操作系统了，当然目前的财务情况是不允许的，这个计划先确定下来，慢慢再去实现。WWDC 2016也快开了，应该会发布新的MacBook，到时候再看看。OS X精简而强大，就是我理想中的系统，与MacBook完美结合，我都迫不及待了。 我并不想面面俱到，反而什么都不精通，我想探索出来我的技术之路，成为某个方面的“专家”。我喜欢去接触新的技术，喜欢去探索，年轻的我们什么都没有，除了一颗对一切未知好奇的心。","categories":[{"name":"观点与感想","slug":"观点与感想","permalink":"https://lhp9916.github.io/categories/观点与感想/"}],"tags":[]},{"title":"谈谈“酒桌文化”","slug":"talk-about-table-culture","date":"2016-05-07T16:00:00.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"talk-about-table-culture/","link":"","permalink":"https://lhp9916.github.io/talk-about-table-culture/","excerpt":"今天谈的这个话题有点“大”，而且可能与很多人的观点不一样，但是很有必要说一说，主要是昨晚上部门聚餐导致我晚上将近凌晨才回来，不吐不快，那我就开始说了。 酒桌文化在中国可谓是源远流长，不管是红白喜事，还是逢年过节请客吃饭，还是旧友重逢…离不开酒这个东西。首先我是排斥酒的，原因是小时候我爸爸只要是出门做客吃酒席，一定是醉酒回家，然后家里免不了一场争吵，还有那个气味我想起来就想呕吐。","text":"今天谈的这个话题有点“大”，而且可能与很多人的观点不一样，但是很有必要说一说，主要是昨晚上部门聚餐导致我晚上将近凌晨才回来，不吐不快，那我就开始说了。 酒桌文化在中国可谓是源远流长，不管是红白喜事，还是逢年过节请客吃饭，还是旧友重逢…离不开酒这个东西。首先我是排斥酒的，原因是小时候我爸爸只要是出门做客吃酒席，一定是醉酒回家，然后家里免不了一场争吵，还有那个气味我想起来就想呕吐。似乎是从小开始我就厌恶酒这个东西，现在参加工作，交际应酬慢慢多了，请领导吃饭喝酒、部门聚餐喝酒，不给领导敬酒似乎是很不懂事。身边的同事和朋友都教我要如何做到“懂事”，因为这样才能得到领导的青睐。作为朋友，在此我真诚地谢谢你们的好意。可是我性格如此，天生骄傲，溜须拍马这套我学不了，也不想去学。也许你们会嘲笑我不懂人情世故、顽固不化。但我很清楚我想成为一个怎样的人，作为一个技术人员，我只想把我的技术学到家，能够处理工作中的问题。我做技术，老板给工资，做得好给我加薪，但是如果非要靠那种“鞍前马后”才能得到青睐，而不是靠技术，我一定会说“fuck,大爷我不伺候了！” 好了，总结一下，朋友同事之间吃饭喝酒调节下气氛，请客吃饭喝酒热闹，这些都无可厚非，只要量力而行且注意身体就好了。但是作为技术人员，要陪酒敬酒我就不伺候了。","categories":[{"name":"观点与感想","slug":"观点与感想","permalink":"https://lhp9916.github.io/categories/观点与感想/"}],"tags":[]},{"title":"为什么我想成为一名全栈工程师","slug":"why-I-want-to-be-a-full-stack-developer","date":"2016-04-19T16:00:00.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"why-I-want-to-be-a-full-stack-developer/","link":"","permalink":"https://lhp9916.github.io/why-I-want-to-be-a-full-stack-developer/","excerpt":"前面我就说过，我自学了很多方面的技术的，原因嘛就是我想成为一名全栈工程师。今天在网上看一到了这篇文章——《为什么你应该尝试“全栈”》，下面是文章内容，跟大家分享一下。 程序员看到”全栈”这个概念，大概会有两种反应 卧槽，这个好，碉堡了 你懂毛，全栈就是样样稀松以上两种反应其实都有失偏颇。因为即使只学一门技术，水平很菜的人也多的是，而全栈工程师当中样样都做，而样样都做得不错的也不少。更别说这个世界还存在另外一种爆栈型的程序员，做什么，什么都精。","text":"前面我就说过，我自学了很多方面的技术的，原因嘛就是我想成为一名全栈工程师。今天在网上看一到了这篇文章——《为什么你应该尝试“全栈”》，下面是文章内容，跟大家分享一下。 程序员看到”全栈”这个概念，大概会有两种反应 卧槽，这个好，碉堡了 你懂毛，全栈就是样样稀松以上两种反应其实都有失偏颇。因为即使只学一门技术，水平很菜的人也多的是，而全栈工程师当中样样都做，而样样都做得不错的也不少。更别说这个世界还存在另外一种爆栈型的程序员，做什么，什么都精。从我的个人实践出发，全栈学徒至少要掌握以下几种技能：Web 前端开发，至少掌握一种前端框架；Server 后端开发，至少掌握一种后端框架；Server 运维，掌握 Linux Server 的搭建与维护；客户端开发，iOS 和 Android 至少掌握一种；数据库，掌握 SQL 和 noSQL 数据库。而获得全栈这个称谓则应该至少独当一面的一个人完成一款产品的构建，并且真的经历过商业化运作，以及，被自己的愚蠢坑过无数次。由此可见，全栈的门槛还是挺高的，并不是说掌握以上五种技能，就能称为全栈，至少要加个学徒来修饰一下，也正是因为太多学徒自诩全栈，才令旁人觉得”全栈”就是”样样稀松”的同义词。不过，这篇文章的题目是 —— 为什么你应该尝试全栈，所以我想讨论的并不在要不要做全栈，而是尝试。 外行与内行过去几年里，我和不少团队聊过，发现绝大部分的团队矛盾都在于——Server 端的不懂客户端，设计出来个 API 后瞎 BB；设计师不懂客户端，设计个交互瞎 BB；客户端不懂 Server，对着 API 瞎 BB；客户端不懂产品，对着需求瞎 BB；产品经理不懂需求，对着 Team 瞎 BB。除了最后的产品经理应该被烧死以外，前四个矛盾都还是有救的。 程序员是一个上帝模式的职业，每天的工作就是创造，所以这个职业看起来很酷。然而正因为如此，程序员多少都会有些自负，自负的结果就是以自己有限的知识去揣测别人的工作该怎么做。如果 Server 端不懂客户端，那么很容易设计出来不符合客户端机制的 API。在这时候，做客户端那边的程序员耐心解释，每个 API 耽误一两天的时间来磨合还可以，不好的话就要吵架了。但 Server 端的程序员并不总是错的，客户端这边希望所有数据给出来后不需要再加工，但往往按照客户端需要的结构給的话，有些查询可能要耗时一两秒。客户端如果不理解服务端的机制，一味以 “服务端就是給客户端服务的” 来要求，吵架就又难以避免了。如果说技术人之间的争论是冷兵器战争的话，那如果碰到更外行的产品经理或者老板，那就要爆发核战争了。“你就改个网页，十分钟能搞定吗？”“效果怎么可能很难做，我给你做个！”“明天上线，赶紧的！”“我不管你技术上有什么难度，反正你就得给我实现出来！”而这样的场景，无论是哪家公司，几乎都在不停上演。 尝试了解对方的技术先聊聊我的技术成长轨迹吧。我从初中开始使用 Linux，主力系统是 Ubuntu，而后切换到 ArchLinux，然后再回到 Ubuntu，一直使用到大一，这几年的 Linux 使用经验奠定了 Server 架构的基础，大一开始尝试自己做一款产品。那时候就琢磨，我应该先写一个网页版，然后再写个客户端。所以从后端开始，我使用 Django 作为起步，不过很快我转移到了 Rails 阵营，Rails 的敏捷开发极大的降低了开发成本，而其的约定习惯，也使得菜鸟能够平安飞过很多危险区域。开始写网页前端的时候，并不知道有前端框架这个东西，直到用 Rails 写完了后才发现原来有东西叫 Ember.js，于是开始用 Ember.js 来重写，一开始的理解还是如何用 Rails 来渲染前端，后来发现其实在引入了前端框架后 Rails 的角色已经变成了个 API Server 了。于是由此开始从新的角度去考虑如何设计 Rails 的 API，阅读了大量的 API 设计的资料，怎么样设计前端才好用，怎么样降低查询时间，服务器缓存，redis，安全等等。Rails 的自动化帮了不少忙，很多自己并不知道的地方它已经帮忙做好，而当你想了解的时候，又会发现其实现是如此精妙。更别说 Rails 对新技术的接受程度，使得你总是有新东西可以玩，CoffeeScript 和 Sass 最早就是 Rails 吸收作为自己框架的默认前端技术。 随后由 Ember.js 又切换到 Angular.js，用 Angular 重写一遍，期间又接触了前端工具 Grunt （前端的变化一日千里，现在用的东西已经不是这个了）。最后我开始开发 iOS 客户端，此时 iOS 的界面实现又与网页的 HTML 和 CSS 有着很多不同，所以我又花费了不少时间去理解 iOS 的 UI 概念，把思维从网页转换成 iOS 的界面开发思想。数据库也在这个期间从 MySQL 换成了 MongoDB，因为那几年的潮流也正好是这个转变。在这个技术实操的过程里幸好是我一个人，所以没人可以吵架，不然我想各个阶段都是有很多值得争吵的地方。在我所开发的项目上线后，随着运维的复杂程度逐渐提升，也因此接触了 chef 和 Ansible 这种自动化运维方式，再往后 NewRelic 这类的监控服务也上了，而我为了一个稳定的开发环境，继而使用了 Vagrant。这一切都只发生在一年的时间里。有趣的是，很多时候我写着 iOS 客户端时，突然想明白了 HTML 和 CSS 的实现原理，做着 Rails 的时候，突然想出了更好的 iOS 架构方式，不同的技术之间触类旁通的感觉在每天都发生着。在后来的时间里，这段经历使得我和不同的技术人沟通都非常轻松，因为去年秒视做滤镜的原因，我开始研究起 openGL，在重拾了 Blender之 后，很多以前似懂非懂的地方，实现突然变的像 Hello World 一样简单，因此也干脆玩起 Unity 来，在这一切的积累之后，Unity 的学习变的非常轻松，成为了我晚上的休闲项目，或许不久之后，你会看到一款我做的游戏（可能会是 RPG）。我并不觉得全栈会使得你全面平庸，每种技术在做的时候都可以为其他的技术提供思路，而在你了解各种技术的前提下，深入其中的某个技术，时常能够带来对其他技术的反哺。相反，了解的技术如果非常狭隘，很可能才是限制自己潜能的原因。 尊重与和平在团队沟通的时候，对对方技术的了解能减少非常多的沟通成本，并带来尊重和和平。很少见大神在一起争论谁该来让步，相反往往都是初窥门径的人整天吵个没完，脾气一点就爆。虽然很难讲整个行业的水平能很快有质的变化，但是我想如果产品需求能够详细的描述清楚，说清楚原因，技术人员之间能够在一起相互学习，耐心的探讨，设计师能够尊重技术纬度的事情，设计出更符合当下的原型，那一切就会往者好的方向发展，这一切就从了解对方的工作开始。（作者：周楷雯 原文地址：http://www.ifanr.com/551905）","categories":[{"name":"观点与感想","slug":"观点与感想","permalink":"https://lhp9916.github.io/categories/观点与感想/"}],"tags":[]},{"title":"回忆下“我的少女时代”","slug":"recall-my-puberty","date":"2016-04-08T16:00:00.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"recall-my-puberty/","link":"","permalink":"https://lhp9916.github.io/recall-my-puberty/","excerpt":"闲来无事把之前电脑下载的电影翻出来看，无意间翻到了《我的少女时代》，这应该是去年上映的片子，口碑还不错。看完了思绪颇多，于是就有了这篇文章。 我大约把我的人生分为以下几个阶段：第一段是出生到小学毕业，这一阶段应该是最天真烂漫、无忧无虑的时期；第二阶段是初中到高中，为了万恶的“高考”准备，各种考试、校规、还有青春期的遐（瞎）想萌动；第三阶段是大学时期，这个时期应该是人生最逍遥快活的时期，时间过得很快，也没留下什么；第四阶段是到了社会，开始职业生涯……好吧，先划分到这里，以后的路可能更精彩，往后再说。","text":"闲来无事把之前电脑下载的电影翻出来看，无意间翻到了《我的少女时代》，这应该是去年上映的片子，口碑还不错。看完了思绪颇多，于是就有了这篇文章。 我大约把我的人生分为以下几个阶段：第一段是出生到小学毕业，这一阶段应该是最天真烂漫、无忧无虑的时期；第二阶段是初中到高中，为了万恶的“高考”准备，各种考试、校规、还有青春期的遐（瞎）想萌动；第三阶段是大学时期，这个时期应该是人生最逍遥快活的时期，时间过得很快，也没留下什么；第四阶段是到了社会，开始职业生涯……好吧，先划分到这里，以后的路可能更精彩，往后再说。今天想聊的是第二阶段，好吧我承认这段时间的“折磨”令我刻骨铭心，以至于多年后在梦里我还会回到那间教室。 白色印着校徽的短袖，乌黑很薄的长裤，这就是我们高中很丑陋的校服了，还有就是女生都是“蘑菇短发”。每个人的青春里，年级主任往往都是最变态的一个人，我们也是。穿校服和蘑菇头都是他搞出来的，还有不准带零食到教室，不准带电子数码产品，还有好多不准我这就不一一列举。其实说实话，零食都是塞进校服里带进教室，mp4和手机几乎是人手一个，这样的禁止显然然并卵。青春期的我们都很叛逆，总想打破禁止。 其实回过头一看，那时候的又好像很简单，每天都是上课下课，开学放学放假，教室食堂寝室三点一线的生活，每天都在重复同样的事，直到毕业那天的来临。 最后给如今身在职场的你一句话，也是女主林真心辞职的一段话。给我该给的薪水，放我该放的假，不然你让我辞职吧。人不需要在一个不在乎你是谁的地方浪费自己的人生。","categories":[{"name":"杂物间","slug":"杂物间","permalink":"https://lhp9916.github.io/categories/杂物间/"}],"tags":[]},{"title":"2016清明惠州一游","slug":"travel-to-huizhou","date":"2016-04-04T16:00:00.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"travel-to-huizhou/","link":"","permalink":"https://lhp9916.github.io/travel-to-huizhou/","excerpt":"清明小长假我们去了一趟惠州，回来的路上我就“策划”写一篇游记来记录一下这次惠州之行，那么这开始吧。 这次出行的方式是选择自驾游，为了避免堵车我们是早上六点出发，第二天吃完午饭回来，当导航每次提示“前方10公里以上道路畅通”，真是快哉！提到导航不得不吐槽百度地图，很令人无语，相比之下，高德地图就显得更为专业和准确，在此强烈推荐。此次一共去了两个地方，巽寮湾和惠州西湖，下面晒下照片。","text":"清明小长假我们去了一趟惠州，回来的路上我就“策划”写一篇游记来记录一下这次惠州之行，那么这开始吧。 这次出行的方式是选择自驾游，为了避免堵车我们是早上六点出发，第二天吃完午饭回来，当导航每次提示“前方10公里以上道路畅通”，真是快哉！提到导航不得不吐槽百度地图，很令人无语，相比之下，高德地图就显得更为专业和准确，在此强烈推荐。此次一共去了两个地方，巽寮湾和惠州西湖，下面晒下照片。 总结一下，有一望无际的大海，有海滩，有宽阔的湖面，有美食，也有难喝的椰汁…更重要的是有亲人的陪伴 ，一切都是那么美！ 愉快的假期结束了，接下来就是做好去东莞的准备了，做好技术储备，东莞，I am coming。","categories":[{"name":"生活的足迹","slug":"生活的足迹","permalink":"https://lhp9916.github.io/categories/生活的足迹/"}],"tags":[]},{"title":"转向C#","slug":"turn_to_csharp","date":"2016-03-31T16:00:00.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"turn_to_csharp/","link":"","permalink":"https://lhp9916.github.io/turn_to_csharp/","excerpt":"我宣布，从今天起我将转向C#了，虽然今天是愚人节，但我是不开玩笑的。 我做PHP做得不挺好的吗，为啥会转去做C#呢？首先一个原因是因为工作，朋友推荐的这份工作的，感觉各方面还不错，所以就答应了。其次我这个人喜欢做新的东西、接触新技术，所以对于我来说未尝不是一个机会呢。那么有人就会说那你不就没技术方向了吗。方向这个东西，其实在我上大学的时候，我的方向是成为一个android工程师，毕业了没应聘上做android的，就去做了互联网，互联网就成了我的第二方向。互联网确实是一个开放的平台，对于程序员来说是一个很不错的选择。所以现阶段（毕业一到两年的时间里），应该是我探索方向的过程的，“实践是检验真理的唯一标准”，不去别的技术领域试试，怎么知道哪条路是最适合自己的呢！","text":"我宣布，从今天起我将转向C#了，虽然今天是愚人节，但我是不开玩笑的。 我做PHP做得不挺好的吗，为啥会转去做C#呢？首先一个原因是因为工作，朋友推荐的这份工作的，感觉各方面还不错，所以就答应了。其次我这个人喜欢做新的东西、接触新技术，所以对于我来说未尝不是一个机会呢。那么有人就会说那你不就没技术方向了吗。方向这个东西，其实在我上大学的时候，我的方向是成为一个android工程师，毕业了没应聘上做android的，就去做了互联网，互联网就成了我的第二方向。互联网确实是一个开放的平台，对于程序员来说是一个很不错的选择。所以现阶段（毕业一到两年的时间里），应该是我探索方向的过程的，“实践是检验真理的唯一标准”，不去别的技术领域试试，怎么知道哪条路是最适合自己的呢！还要一个消息就是，我要离开深圳了，下一站——东莞。深圳是一个好地方，在这待了也有一年了，但这里真的没有一点是值得我留恋的。这话说得有点绝情了，但也是事实，现实总是残酷的，尤其是在深圳。东莞那里嘛，地处偏僻，人会少很多，安静许多。我并不喜欢大城市，我宁愿待在一个比较偏僻的地方，前提是网速足够快。 好了，不扯那么多了，总之是转向做C#了，也准备好好干，不然对不起人。但是我并不放弃了PHP和Android，我会持续关注它们的发展的，也许不久之后我会come back。 前路漫漫，未知的问题还有很多，我会很乐观地面对，好好做事，好好做人，好好的过日子。","categories":[{"name":"生活的足迹","slug":"生活的足迹","permalink":"https://lhp9916.github.io/categories/生活的足迹/"}],"tags":[]},{"title":"我应该学什么","slug":"what-should-I-learn","date":"2016-02-27T16:00:00.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"what-should-I-learn/","link":"","permalink":"https://lhp9916.github.io/what-should-I-learn/","excerpt":"毕业参加工作有一段时间了，今后我想分享一些我个人的经验给大家。 开门见山，今天我想聊的话题是，“计算机技术有那么多，那么我们应该学什么？”特别是对一个初学者或者是在校大学生来说，这个问题尤为重要。在这里我首先想陈述一个现象，刚毕业大学生都会感觉没有学到什么东西，啥也不会，找工作处处碰壁。这时候往往就会去一些培训机构继续学习，我并不反对参加培训，因为参加培训确实能学到很多东西，但是会花费一点的时间和金钱。对于一个上个大学的人来说，我认为这是不必要的，完全可以避免的，因为在大学我们有足够的时间和精力来提高自己。","text":"毕业参加工作有一段时间了，今后我想分享一些我个人的经验给大家。 开门见山，今天我想聊的话题是，“计算机技术有那么多，那么我们应该学什么？”特别是对一个初学者或者是在校大学生来说，这个问题尤为重要。在这里我首先想陈述一个现象，刚毕业大学生都会感觉没有学到什么东西，啥也不会，找工作处处碰壁。这时候往往就会去一些培训机构继续学习，我并不反对参加培训，因为参加培训确实能学到很多东西，但是会花费一点的时间和金钱。对于一个上个大学的人来说，我认为这是不必要的，完全可以避免的，因为在大学我们有足够的时间和精力来提高自己。首先你的有个技术方向。看过上一篇的文章的人应该知道我学习过很多方面的技术，像C，C#,Java,html/css/js,PHP,android等，这就是我踩过的坑。上大学那会，还很迷茫，不管有用没用我都学，这样的话浪费很多时间和精力，很难对某一门技术非常精通，在有限的时间里，得不偿失。计算机的方向（注意我这里只讨论做软件方面的）主要有两大块，一个是做Web开发，一个是做移动端开发。 做web开发的话，又分为前端和后台。前端开发主要学习html/css/javascript，后台的方向主要有Java web和PHP，（ASP .net就不要考虑了），做后台的话数据库是必学的，在这里我推荐你学习mysql这个数据库，免费开源，也是大多数公司的首选。 做移动端开发，主要有两大平台android和IOS。IOS比较坑，必须在OS X平台下开发，硬件成本很高，成为一个IOS开发者还要每年交100美元给苹果，所以我推荐大家学习android，当然有条件的同学可以学习IOS。 接下来说怎么学呢？答案是“看书+网络”，学习一门新技术最快的方面就是看书，可以去网上买一本入门书籍，不需要很厚（怕你看不完），当年我就买了很多诸如XXX从入门到精通一类的书籍。其次是网络，互联网上有很多免费的资源，看视频教程也是学习技术的好方法，我给大家推荐慕课网，不解释，去了你就知道，真是业界良心。 coding是一件很枯燥的事情，尤其是一个人单兵作战。接下来向你推荐的是版本管理工具Git和代码托管平台GitHub。在那里你会找到全世界大牛的开源项目，也可以把自己的代码托管到上面，进行多人协同开发。 还是那句话，兴趣是最好的老师，当你决定一个方向了，坚持走下去，一定会有所收获的。","categories":[{"name":"观点与感想","slug":"观点与感想","permalink":"https://lhp9916.github.io/categories/观点与感想/"}],"tags":[]},{"title":"让学习成为习惯","slug":"make-learing-a-habit","date":"2016-02-25T16:00:00.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"make-learing-a-habit/","link":"","permalink":"https://lhp9916.github.io/make-learing-a-habit/","excerpt":"Hi，来了。一个年又已经过完了，早就想来唠叨两句，总是“没时间”，时间都去哪了？看了下给回去给自己的任务，貌似一件都没有做，该看的书没看，想学的框架也没学。有一句话说，比你优秀的人不可怕，可怕的是比你优秀的人比你更努力。","text":"Hi，来了。一个年又已经过完了，早就想来唠叨两句，总是“没时间”，时间都去哪了？看了下给回去给自己的任务，貌似一件都没有做，该看的书没看，想学的框架也没学。有一句话说，比你优秀的人不可怕，可怕的是比你优秀的人比你更努力。下面客观的分析下，然后决定怎么办。从我买电脑（一台三千块的东芝笔记本）到现在，快三年了，编程写代码的话算起来也就两年时间，期间学习了C，C#,Java,html/css/js,PHP,android，还花了一定的时间学习了c++,python,ruby,mysql,sql server,mongodb,nodejs，数数看是学了一堆。计算机的知识多，又容易忘记，这是一个客观的现象，我的现在的状况是比较慢，代码量没上去，好多东西很生疏，经常需要查手册，没有写过十万行代码的程序员都不算是程序员，往后还要加强代码的练习，代码量上去了，速度自然快了，当然这也需要时间，要坚持有恒心。 所以从今天起，我要每天都向github提交代码，除非特殊情况，坚持一年，让学习成为习惯！","categories":[{"name":"软技能","slug":"软技能","permalink":"https://lhp9916.github.io/categories/软技能/"}],"tags":[]},{"title":"2016-归乡之旅","slug":"SpringFestival-gohome","date":"2016-01-29T16:00:00.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"SpringFestival-gohome/","link":"","permalink":"https://lhp9916.github.io/SpringFestival-gohome/","excerpt":"今天是农历的二十一，晚上和老姐坐车回家，应该是第一次跟老姐一起坐火车，归乡之旅愉快！ 从2015年6月毕业，到现在工作也有半年时间了，确实经历了一些事情，在这个放假的前夕，公司也发生着很大的变化。不知道接下来会发生怎样的转变，希望一切往好的方向发展，最坏的结果也就那样。","text":"今天是农历的二十一，晚上和老姐坐车回家，应该是第一次跟老姐一起坐火车，归乡之旅愉快！ 从2015年6月毕业，到现在工作也有半年时间了，确实经历了一些事情，在这个放假的前夕，公司也发生着很大的变化。不知道接下来会发生怎样的转变，希望一切往好的方向发展，最坏的结果也就那样。家乡还是一个落后的小村子，十几年了也没怎么变化，这一回去就脱离互联网了，不过也好，以后一年就回去一次，这次假期加请假有半个多月了，希望多花点时间陪陪父母。不知道大家的家乡过年是怎样的？不过在我们那个地方过年的气氛越来越淡了，但是“回家”却是永久的主题。 回去要做的事：一是把之前买的前端的书再过一遍；二是把巩固框架的学习（视频教程、书籍）；对了，把港澳通行证办了，目前想到的就是这些。 其实也很久很久不写文章了，上一次写文章估计还是高考的作文，写得不好请大家见谅。但是我觉得写文章是一个好习惯，或者功利点说，对自己是有帮助的，希望日后我能坚持写下去，慢慢锻炼出写作水平。 好了，归乡之旅即将开始，就写到这里了，我去收拾东西了。","categories":[{"name":"生活的足迹","slug":"生活的足迹","permalink":"https://lhp9916.github.io/categories/生活的足迹/"}],"tags":[]},{"title":"open my blog","slug":"open-my-blog","date":"2016-01-15T16:00:00.000Z","updated":"2021-03-30T08:05:24.891Z","comments":true,"path":"open-my-blog/","link":"","permalink":"https://lhp9916.github.io/open-my-blog/","excerpt":"写在前面活着，怎么会没有故事？作为一个程序员，应该有自己记录生活的方式，所以，今天我的个人网站就算是正式上线了。在这里，我将写一些，那些年经历过的那些事。故事的起点，就从进入大一开始。","text":"写在前面活着，怎么会没有故事？作为一个程序员，应该有自己记录生活的方式，所以，今天我的个人网站就算是正式上线了。在这里，我将写一些，那些年经历过的那些事。故事的起点，就从进入大一开始。 2012年9月至2015年6月 上大学2012年高中毕业，怀着复杂的心情来到荆州上大学，在这里度过了三年的时光，也就是在这里接触到的互联网和计算机。三年里，几乎前面一半的时间并没有学到什么，就是上上课，回去寝室看视频，日子就这么一天天过了（当然这段时间里面学到的计算机方面的基础知识，为后面学习编程打下的基础）。说到编程，我学过不少的语言，C语言、Java、C#、PHP、Go、还有前端的html/css/js等。编程第一门课是C语言，至今我还记得老师的名字，那个时候只觉得编程挺麻烦的，一个字母一个字母的敲，写完一run，编译报一堆的error,内心是崩溃的。后来就是上了陈勇老师的js选修课，也就是在那个时候奠定了成为web开发者的基础。再后来意外地找到慕课网，从此进入互联网的世界，知识面也一下开阔了起来，在这里我要感谢慕课网。总之，大学是迷茫的，是对自己技术和职业方向的探索的过程。 2015年6月至今 在深圳上班就业难，是当代大学生必须面对的坎。我很庆幸自己并没有在这个坎上耗费太多的时间，也没有走弯路（比如去培训，做不是自己专业的工作），而是从事的当初给自己设定的方向-web开发。刚上班也是各种不会和不习惯，来到一个陌生的地方，独自一个人闯荡，内心是很缺乏归属感。学习和工作还是有很大的区别，学习更多的是了解更多的知识，虽然这个知识点日后可能一直用不到；而工作里面，老大关心的成果，什么时候能上线，能最快上线。总的来说，在安盛上班还是不错的，每周双休，基本上也不用加班，技术方面也学到了很多，我很满足。在这里我想提一下学习的方法，我个人觉得编程更像是一门手艺，知识是无穷无尽，而人的精力是有限的，很多知识用不到就会忘掉，所以我想说的是Learn By Making，边做边学，在实践和coding中记住每个知识点。对于一个菜鸟级的程序员，职业生涯才真正开始。 未完待续…","categories":[{"name":"生活的足迹","slug":"生活的足迹","permalink":"https://lhp9916.github.io/categories/生活的足迹/"}],"tags":[]}]}